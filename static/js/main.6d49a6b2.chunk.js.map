{"version":3,"sources":["constants/Types.js","components/Card/Card.js","components/Card/index.js","components/Text/index.js","components/Text/Text.js","components/Input/Input.js","components/Input/index.js","components/DateSelector/CalendarModal.js","components/DateSelector/DateSelector.js","components/DateSelector/index.js","components/ProgressBar/ProgressBar.js","components/ProgressBar/index.js","components/SettingsModal/index.js","components/SettingsModal/SettingsModal.js","utils/Calculate.js","containers/index.js","containers/DateCalculator.js","utils/Storage.js","assets/images/dobby.png","App.js","index.js"],"names":["COLOR_BLUE","TYPE_START","SETTINGS_KEY","Card","children","className","align","props","cardAlign","classNames","defaultProps","Component","Input","type","value","onChange","placeholder","readOnly","DialogTitle","withStyles","theme","root","margin","padding","spacing","closeButton","position","right","top","color","palette","grey","classes","onClose","other","disableTypography","Typography","variant","IconButton","aria-label","onClick","CalendarModal","open","id","title","Dialog","maxWidth","fullWidth","DialogContent","dividers","locale","minDetail","showNeighboringMonth","Info","Date","name","onOpenCalendar","formattedValue","moment","format","Button","set","hour","minute","second","toDate","startDate","endDate","onDateChange","onCalculate","onOpenSettings","useState","openCalendar","setOpenCalendar","calendarId","setCalendarId","CalculateButton","backgroundColor","toggleCalendar","prevState","BorderLinearProgress","height","borderRadius","colorPrimary","bar","LinearProgress","progress","setProgress","useEffect","timer","setInterval","prevProgress","clearInterval","settings","onSave","date","setDate","setTitle","showCalendar","setShowCalendar","e","target","DialogActions","formatHolidays","list","holidays","forEach","holiday","start","end","subtract","add","dayDiff","diff","i","push","DateCalculator","setStartDate","setEndDate","workDays","setWorkDays","calendarDays","setCalendarDays","percent","setPercent","openSettings","setOpenSettings","setSettings","loadFromLocalStorage","key","localStorage","getItem","JSON","parse","getLocalStorage","split","year","month","toggleOpen","days","hd","Holidays","init","startYear","endYear","years","getHolidays","count","daysDiff","current","find","h","day","getWorkingDaysCount","baseDate","Number","parseFloat","toFixed","data","ddaySettings","stringify","setItem","setLocalStorage","App","ReactGA","initialize","pageview","window","location","pathname","search","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNAAaA,EAAa,UAGbC,EAAa,QAQbC,EAAe,iB,gBCTtBC,EAAO,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,SAAUC,EAAiC,EAAjCA,UAAWC,EAAsB,EAAtBA,MAAUC,EAAY,gDACnDC,EAAS,gBAAYF,GACrBG,EAAU,eAAWJ,GAAa,GAAxB,YAA8BG,GAC9C,OACE,6CAAKH,UAAWI,GAAgBF,GAAhC,aACGH,MAKPD,EAAKO,aAAe,CAClBN,SAAU,wBACVE,MAAO,UAGMH,ICfAQ,EDeAR,EEfAQ,ECAF,SAAC,GAAD,IAAGP,EAAH,EAAGA,SAAaG,EAAhB,mCACX,8CAAMF,UAAU,QAAWE,GAA3B,aAAmCH,MCD/BQ,EAAQ,SAAC,GAA+D,IAA7DC,EAA4D,EAA5DA,KAAMC,EAAsD,EAAtDA,MAAOC,EAA+C,EAA/CA,SAASC,EAAsC,EAAtCA,YAAaC,EAAyB,EAAzBA,SAAyB,oEAC3E,OACE,uBACEJ,KAAMA,EACNC,MAAOA,EACPE,YAAaA,EACbC,SAAUA,EACVF,SAAUA,KAKhBH,EAAMF,aAAe,CACnBG,KAAM,OACNC,MAAO,GACPG,UAAU,GAGGL,ICnBAD,EDmBAC,E,6EEOTM,EAAcC,aAbL,SAACC,GAAD,MAAY,CACzBC,KAAM,CACJC,OAAQ,EACRC,QAASH,EAAMI,QAAQ,IAEzBC,YAAa,CACXC,SAAU,WACVC,MAAOP,EAAMI,QAAQ,GACrBI,IAAKR,EAAMI,QAAQ,GACnBK,MAAOT,EAAMU,QAAQC,KAAK,SAIVZ,EAAmB,SAACZ,GAAW,IACzCH,EAAyCG,EAAzCH,SAAU4B,EAA+BzB,EAA/ByB,QAASC,EAAsB1B,EAAtB0B,QAAYC,EADS,YACC3B,EADD,kCAEhD,OACE,eAAC,IAAD,yBAAgB4B,mBAAiB,EAAC9B,UAAW2B,EAAQX,MAAUa,GAA/D,cACE,cAACE,EAAA,EAAD,CAAYC,QAAQ,KAApB,SAA0BjC,IACzB6B,EACC,cAACK,EAAA,EAAD,CACEC,aAAW,QACXlC,UAAW2B,EAAQP,YACnBe,QAASP,EAHX,SAKE,cAAC,IAAD,MAEA,YAwCKQ,EAnCO,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,KAAMT,EAAmC,EAAnCA,QAASU,EAA0B,EAA1BA,GAAI7B,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC3C6B,EAAQD,IAAO1C,EAAa,aAAe,WAEjD,OACE,eAAC4C,EAAA,EAAD,CACEC,SAAS,KACTC,WAAW,EACXL,KAAMA,EACNT,QAAS,kBAAMA,EAAQ,OACvB5B,UAAU,iBALZ,UAOE,eAAC,EAAD,CAAa4B,QAAS,kBAAMA,EAAQ,OAApC,UAA4CW,EAA5C,OACA,cAACI,EAAA,EAAD,CAAeC,UAAQ,EAAvB,SACE,cAAC,IAAD,CACEnC,MAAOA,EACPoC,OAAO,QACPC,UAAW,QACXC,sBAAsB,EACtBrC,SAAU,SAACD,GACTC,EAAS4B,EAAI7B,Y,SCmCnBuC,EAAO,SAAC,GAAD,IAAGT,EAAH,EAAGA,MAAOJ,EAAV,EAAUA,QAAV,OACX,sBAAKnC,UAAU,OAAf,UACE,eAAC,EAAD,eAAQuC,KACR,mBAAGvC,UAAU,gBAAgBmC,QAASA,QAIpCc,EAAO,SAAC,GAAmD,IAAjDX,EAAgD,EAAhDA,GAAIY,EAA4C,EAA5CA,KAAMzC,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,SAAUyC,EAAqB,EAArBA,eACnCC,EAAiB3C,GAAS4C,IAAO5C,GAAO6C,OAAO,cACrD,OACE,sBAAKtD,UAAU,eAAf,UACE,eAAC,EAAD,WAAOkD,EAAP,OACA,sBAAKlD,UAAU,OAAf,UACE,cAAC,EAAD,CACEQ,KAAK,OACLC,MAAO2C,EACPzC,YAAY,aACZC,UAAU,IAEZ,mBAAGZ,UAAU,gBAAgBmC,QAAS,kBAAMgB,EAAeb,MAC3D,cAACiB,EAAA,EAAD,CACEvB,QAAQ,WACRR,MAAM,UACNW,QAAS,kBACPzB,EACE4B,EACAe,MAASG,IAAI,CAAEC,KAAM,EAAGC,OAAQ,EAAGC,OAAQ,IAAKC,WANtD,0BCrHOtD,EDWM,SAAC,GAOf,IANLuD,EAMI,EANJA,UACAC,EAKI,EALJA,QACAC,EAII,EAJJA,aACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,eACA1B,EACI,EADJA,MACI,EACoC2B,oBAAS,GAD7C,mBACGC,EADH,KACiBC,EADjB,OAEgCF,mBAAS,MAFzC,mBAEGG,EAFH,KAEeC,EAFf,KAIEC,EAAkBzD,YAAW,CACjCE,KAAM,CACJwD,gBAAiB7E,IAFGmB,CAIrByC,KAyBGkB,EAAiB,SAACnC,GACtB8B,GAAgB,SAACM,GAAD,OAAgBA,KAChCJ,EAAchC,IAGhB,OACE,eAAC,EAAD,CAAMtC,UAAU,gBAAhB,UACE,cAAC,EAAD,CAAMuC,MAAOA,EAAOJ,QAAS8B,IAC7B,cAAC,EAAD,CACE3B,GAAI1C,EACJsD,KAAK,aACLzC,MAAOoD,EACPnD,SAAUqD,EACVZ,eAAgBsB,IAElB,cAAC,EAAD,CACEnC,GRjEgB,MQkEhBY,KAAK,WACLzC,MAAOqD,EACPpD,SAAUqD,EACVZ,eAAgBsB,IAElB,cAACF,EAAD,CACEvC,QAAQ,YACRR,MAAM,UACNW,QAAS6B,EAHX,uBAQCG,GACC,cAAC,EAAD,CACE9B,KAAM8B,EACNvC,QAAS6C,EACTnC,GAAI+B,EACJ5D,MAAO4D,IAAezE,EAAaiE,EAAYC,EAC/CpD,SAAU,SAAC4B,EAAI7B,GACbsD,EAAazB,EAAI7B,GACjBgE,EAAe,a,SEpFrBE,EAAuB7D,aAAW,SAACC,GAAD,MAAY,CAClDC,KAAM,CACJ4D,OAAQ,SACRC,aAAc,GAEhBC,aAAc,CACZN,gBAAiB,SAEnBO,IAAK,CACHF,aAAc,EACdL,gBAAiB7E,MAVQmB,CAYzBkE,KClBW1E,EDoBK,SAAC,GAAe,IAAbG,EAAY,EAAZA,MAAY,EACDyD,mBAAS,GADR,mBAC1Be,EAD0B,KAChBC,EADgB,KAejC,OAZAC,qBAAU,WACR,IAAMC,EAAQC,aAAY,WACxBH,GAAY,SAACI,GAAD,OACVA,GAAgB7E,EAAQA,EAAQ6E,EAAe,OAEhD,KAEH,OAAO,WACLC,cAAcH,MAEf,CAAC3E,IAGF,sBAAKT,UAAU,eAAf,UACE,cAAC2E,EAAD,CAAsB3C,QAAQ,cAAcvB,MAAOwE,IACnD,qCAAQxE,GAAS,EAAjB,W,SEtCSH,ECWO,SAAC,GAAyC,IAAvC+B,EAAsC,EAAtCA,KAAMmD,EAAgC,EAAhCA,SAAU5D,EAAsB,EAAtBA,QAAS6D,EAAa,EAAbA,OAAa,EACrCvB,mBAASb,IAAOmC,EAAS1B,SAASF,UADG,mBACtD8B,EADsD,KAChDC,EADgD,OAEnCzB,mBAASsB,EAASjD,OAFiB,mBAEtDA,EAFsD,KAE/CqD,EAF+C,OAGrB1B,oBAAS,GAHY,mBAGtD2B,EAHsD,KAGxCC,EAHwC,KAiBvD1C,EAAiBsC,GAAQrC,IAAOqC,GAAMpC,OAAO,cACnD,OACE,eAACd,EAAA,EAAD,CACEC,SAAS,KACTC,WAAW,EACXL,KAAMA,EACNrC,UAAU,iBAJZ,UAME,cAACa,EAAA,EAAD,8BACA,eAAC8B,EAAA,EAAD,WACE,sBAAK3C,UAAU,WAAf,UACE,qBAAKA,UAAU,QAAf,0BACA,cAAC,EAAD,CACEQ,KAAK,OACLC,MAAO8B,GAAS,GAChB7B,SAAU,SAACqF,GAAD,OAvBEvF,EAuBkB,QAvBZC,EAuBqBsF,EAAEC,OAAOvF,WAtB3C,UAATD,GAAkBoF,EAASnF,IADZ,IAACD,EAAMC,QA0BtB,sBAAKT,UAAU,WAAf,UACE,qBAAKA,UAAU,QAAf,uBACA,cAAC,EAAD,CACEQ,KAAK,OACLC,MAAO2C,GAAkB,GACzBzC,YAAY,aACZC,UAAU,IAEZ,mBAAGZ,UAAU,gBAAgBmC,QA9Bd,WACrB2D,GAAgB,SAACpB,GAAD,OAAgBA,WA+B3BmB,GACC,cAAC,IAAD,CAGEpF,MAAOiF,EACP7C,OAAO,QACPC,UAAW,QACXC,sBAAsB,EACtBrC,SAhDe,SAACD,GACxBkF,EAAQlF,SAmDN,eAACwF,EAAA,EAAD,WACE,cAAC1C,EAAA,EAAD,CAAQpB,QAASP,EAASJ,MAAM,UAAhC,oBAGA,cAAC+B,EAAA,EAAD,CAAQpB,QAAS,kBAAMsD,EAAO,CAAClD,QAAMmD,UAAQlE,MAAM,UAAnD,yB,yBChCF0E,EAAiB,SAACC,GACtB,IAAIC,EAAW,GAkBf,OAhBAD,EAAKE,SAAQ,SAACC,GAAa,IACnBC,EAAqBD,EAArBC,MAAOC,EAAcF,EAAdE,IAAKtD,EAASoD,EAATpD,KACL,iBAATA,GAA0B,iBAATA,IACnBqD,EAAQlD,IAAOkD,GAAOE,SAAS,EAAG,QAClCD,EAAMnD,IAAOkD,GAAOG,IAAI,EAAG,SAK7B,IAFA,IAAMC,EAAUtD,IAAOmD,GAAKI,KAAKvD,IAAOkD,GAAQ,QAEvCM,EAAI,EAAGA,EAAIF,EAASE,IAC3BT,EAASU,KAAK,CACZpB,KAAMrC,IAAOkD,GAAOG,IAAIG,EAAG,QAAQvD,OAAO,cAC1CJ,KAAMA,OAILkD,GC1DMW,ECaQ,WAAO,IAAD,EACO7C,mBAAS,MADhB,mBACpBL,EADoB,KACTmD,EADS,OAEG9C,mBAAS,MAFZ,mBAEpBJ,EAFoB,KAEXmD,EAFW,OAIK/C,mBAAS,KAJd,mBAIpBgD,EAJoB,KAIVC,EAJU,OAKajD,mBAAS,KALtB,mBAKpBkD,EALoB,KAKNC,EALM,OAMGnD,mBAAS,GANZ,mBAMpBoD,EANoB,KAMXC,EANW,OAQarD,oBAAS,GARtB,mBAQpBsD,EARoB,KAQNC,EARM,OASKvD,mBAAS,IATd,mBASpBsB,EAToB,KASVkC,EATU,KAW3BvC,qBAAU,WACRwC,MACC,IAEH,IAAMA,EAAuB,WAC3B,IAAMnC,EC/Bc,SAACoC,GACvB,GAAKA,GAAe,KAARA,EAAZ,CAEA,IAAMnH,EAAQoH,aAAaC,QAAQF,GACnC,OAAInH,EAAcsH,KAAKC,MAAMvH,QAA7B,GD2BmBwH,CAAgBpI,GACjC,GAAK2F,EAAL,CAFiC,MAIbA,EAAZ1B,QAC4BoE,MAAM,KALT,mBAK1BC,EAL0B,KAKpBC,EALoB,KAKb1C,EALa,KAOjCsB,EAAa3D,MAASO,UACtBqD,EAAW5D,IAAO,CAAE8E,OAAMC,MAAOA,EAAQ,EAAG1C,SAAQ9B,UACpD8D,EAAYlC,KAGR6C,EAAa,WACjBZ,GAAgB,SAAC/C,GAAD,OAAgBA,MAmClC,OACE,qBAAK1E,UAAU,eAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,cAAC,EAAD,CACE6D,UAAWA,EACXC,QAASA,EACTvB,MAAOiD,EAASjD,MAChBwB,aAvCiB,SAACvD,EAAMC,GAC1BD,IAASZ,GAAYoH,EAAavG,GhB3ClB,QgB4ChBD,GAAmByG,EAAWxG,IAsC5BuD,YAnCgB,WACtB,GAAKH,GAAcC,KAAWA,EAAUD,GAAxC,CAEA,IAAMyE,EFnDyB,SAAC/B,EAAOC,GACzC,IAAM+B,EAAK,IAAIC,IACfD,EAAGE,KAAK,MAQR,IANA,IAAMC,EAAYrF,IAAOkD,GAAO4B,OAC1BQ,EAAUtF,IAAOmD,GAAK2B,OAExBS,EAAQ,GACRxC,EAAW,GAENS,EAAI,EAAGA,GAAK8B,EAAUD,EAAW7B,IACxC+B,EAAM9B,KAAK4B,EAAY7B,GAGzB+B,EAAMvC,SAAQ,SAAC8B,GAAD,aAAU,EAAA/B,GAASU,KAAT,oBAAiByB,EAAGM,YAAYV,QAExD,IAAIW,EAAQ,EACZ1C,EAAWF,EAAeE,GAI1B,IAFA,IAAM2C,EAAW1F,IAAOmD,GAAKI,KAAKvD,IAAOkD,GAAQ,QAnBA,WAqBxCM,GACP,IAAMmC,EAAU3F,IAAOkD,GAAOG,IAAIG,EAAG,QACnBT,EAAS6C,MACzB,SAACC,GAAD,OAAOA,EAAExD,OAASsD,EAAQ1F,OAAO,kBAGC,IAAlB0F,EAAQG,OAAiC,IAAlBH,EAAQG,OAC/CL,KAPKjC,EAAI,EAAGA,EAAIkC,EAAW,EAAGlC,IAAM,EAA/BA,GAWT,MAAO,CACLK,SAAU4B,EACV1B,aAAc2B,GEiBDK,CAAoBvF,EAAWC,GAC5CuD,EAAgBiB,EAAKlB,cAAgB,KACrCD,EAAYmB,EAAKpB,UAAY,KAE7B,IAAMmC,EAAWhG,IAAOS,GAAS2C,SAAS,EAAG,SAEvCa,GADcjE,IAAOQ,GAAW+C,KAAKvD,IAAOgG,GAAW,QAAU,GAC3C,IAAgB,IAE5C9B,EAAW+B,OAAOC,WAAWjC,EAAQkC,QAAQ,OAyBvCvF,eAAgBoE,IAElB,eAAC,EAAD,CAAMpI,MAAM,OAAZ,UACE,mBAAGD,UAAU,cACZkH,EAFH,mBAIA,eAAC,EAAD,CAAMjH,MAAM,OAAZ,UACE,mBAAGD,UAAU,cACZoH,EAFH,oBAIA,cAAC,EAAD,CAAa3G,MAAO6G,IAEnBE,GACC,cAAC,EAAD,CACEnF,KAAMmF,EACNhC,SAAUA,EACV5D,QAASyG,EACT5C,OAvCiB,SAACgE,GAAU,IAC5BlH,EAAgBkH,EAAhBlH,MAAOmD,EAAS+D,EAAT/D,KACTgE,EAAe,CACnBnH,QACAuB,QAAST,IAAOqC,GAAMpC,OAAO,gBC9DX,SAACsE,EAAKnH,GAC5B,GAAKmH,GAAe,KAARA,EAAZ,CAEA,IAAM6B,EAAO1B,KAAK4B,UAAUlJ,GAC5BoH,aAAa+B,QAAQhC,EAAK6B,ID6DxBI,CAAgBhK,EAAc6J,GAC9BrB,IAEAV,a,QE3EW,ICuBAmC,MAhBf,WAME,OALA3E,qBAAU,WACR4E,IAAQC,WAAW,gBACnBD,IAAQE,SAASC,OAAOC,SAASC,SAAWF,OAAOC,SAASE,UAC3D,IAGD,qBAAKrK,UAAU,MAAf,SACE,cAAC,EAAD,OCXNsK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.6d49a6b2.chunk.js","sourcesContent":["export const COLOR_BLUE = \"#4360FB\";\r\nexport const COLOR_NAVY = \"#1B256D\";\r\n\r\nexport const TYPE_START = \"START\";\r\nexport const TYPE_END = \"END\";\r\n\r\nexport const MESSAGE_COMMON = 'COMMON'; \r\nexport const MESSAGE_DAYS = 'DAYS'; \r\nexport const MESSAGE_WEEKS = 'WEEKS'; \r\nexport const MESSAGE_MONTHS = 'MONTHS'; \r\n\r\nexport const SETTINGS_KEY = 'D_DAY_SETTINGS'; ","import React from \"react\";\r\n\r\nconst Card = ({ children, className, align, ...props }) => {\r\n  const cardAlign = `align-${align}`;\r\n  const classNames = `card ${className || ''} ${cardAlign}`; \r\n  return (\r\n    <div className={classNames} {...props}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nCard.defaultProps = {\r\n  children: <div></div>,\r\n  align: \"center\",\r\n};\r\n\r\nexport default Card;\r\n","import Component from './Card'; \r\n\r\nexport default Component;","import Component from './Text'; \r\n\r\nexport default Component; ","import React from \"react\";\r\n\r\nconst Text = ({ children, ...props }) => (\r\n  <span className=\"text\" {...props}>{children}</span>\r\n);\r\n\r\nexport default Text;\r\n","import React from \"react\";\r\n\r\nconst Input = ({ type, value, onChange,placeholder, readOnly, ...props }) => {\r\n  return (\r\n    <input\r\n      type={type}\r\n      value={value}\r\n      placeholder={placeholder}\r\n      readOnly={readOnly}\r\n      onChange={onChange}\r\n    />\r\n  );\r\n};\r\n\r\nInput.defaultProps = {\r\n  type: \"text\",\r\n  value: \"\",\r\n  readOnly: false,\r\n};\r\n\r\nexport default Input;\r\n","import Component from './Input'; \r\nexport default Component;","import React from \"react\";\r\n\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport Calendar from \"react-calendar\";\r\n\r\nimport { TYPE_START } from \"constants/Types\";\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          className={classes.closeButton}\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst CalendarModal = ({ open, onClose, id, value, onChange }) => {\r\n  const title = id === TYPE_START ? \"Start Date\" : \"End Date\";\r\n\r\n  return (\r\n    <Dialog\r\n      maxWidth=\"xs\"\r\n      fullWidth={true}\r\n      open={open}\r\n      onClose={() => onClose(null)}\r\n      className=\"calendar-modal\"\r\n    >\r\n      <DialogTitle onClose={() => onClose(null)}>{title} </DialogTitle>\r\n      <DialogContent dividers>\r\n        <Calendar\r\n          value={value}\r\n          locale=\"en-US\"\r\n          minDetail={\"month\"}\r\n          showNeighboringMonth={false}\r\n          onChange={(value) => {\r\n            onChange(id, value);\r\n          }}\r\n        />\r\n      </DialogContent>\r\n      {/* <DialogActions>\r\n        <Button onClick={onClose} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={() => onSave({ title, date })} color=\"primary\">\r\n          Save\r\n        </Button>\r\n      </DialogActions> */}\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default CalendarModal;\r\n","import React, { useState } from \"react\";\r\n\r\nimport moment from \"moment\";\r\n\r\nimport { COLOR_BLUE, TYPE_START, TYPE_END } from \"constants/Types\";\r\n\r\nimport Card from \"components/Card\";\r\nimport Text from \"components/Text\";\r\nimport Input from \"components/Input\";\r\nimport CalendarModal from \"components/DateSelector/CalendarModal\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst DateSelector = ({\r\n  startDate,\r\n  endDate,\r\n  onDateChange,\r\n  onCalculate,\r\n  onOpenSettings,\r\n  title,\r\n}) => {\r\n  const [openCalendar, setOpenCalendar] = useState(false);\r\n  const [calendarId, setCalendarId] = useState(null);\r\n\r\n  const CalculateButton = withStyles({\r\n    root: {\r\n      backgroundColor: COLOR_BLUE,\r\n    },\r\n  })(Button);\r\n\r\n  // const toggleCalendar = (type) => {\r\n  //   const calendars = document.getElementsByClassName(\"react-calendar\");\r\n  //   const [startCalendar, endCalendar] = calendars;\r\n\r\n  //   if (type === TYPE_START) {\r\n  //     const isHidden = startCalendar.classList.contains(\"hide\");\r\n  //     if (isHidden) {\r\n  //       startCalendar.classList.remove(\"hide\");\r\n  //       endCalendar.classList.add(\"hide\");\r\n  //     } else {\r\n  //       startCalendar.classList.add(\"hide\");\r\n  //     }\r\n  //   }\r\n\r\n  //   if (type === TYPE_END) {\r\n  //     const isHidden = endCalendar.classList.contains(\"hide\");\r\n\r\n  //     isHidden\r\n  //       ? endCalendar.classList.remove(\"hide\")\r\n  //       : endCalendar.classList.add(\"hide\");\r\n  //   }\r\n  // };\r\n\r\n  const toggleCalendar = (id) => {\r\n    setOpenCalendar((prevState) => !prevState);\r\n    setCalendarId(id);\r\n  };\r\n  \r\n  return (\r\n    <Card className=\"date-selector\">\r\n      <Info title={title} onClick={onOpenSettings} />\r\n      <Date\r\n        id={TYPE_START}\r\n        name=\"Start Date\"\r\n        value={startDate}\r\n        onChange={onDateChange}\r\n        onOpenCalendar={toggleCalendar}\r\n      />\r\n      <Date\r\n        id={TYPE_END}\r\n        name=\"End Date\"\r\n        value={endDate}\r\n        onChange={onDateChange}\r\n        onOpenCalendar={toggleCalendar}\r\n      />\r\n      <CalculateButton\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={onCalculate}\r\n      >\r\n        Calculate\r\n      </CalculateButton>\r\n\r\n      {openCalendar && (\r\n        <CalendarModal\r\n          open={openCalendar}\r\n          onClose={toggleCalendar}\r\n          id={calendarId}\r\n          value={calendarId === TYPE_START ? startDate : endDate}\r\n          onChange={(id, value) => {\r\n            onDateChange(id, value);\r\n            toggleCalendar(null);\r\n          }}\r\n        />\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst Info = ({ title, onClick }) => (\r\n  <div className=\"info\">\r\n    <Text> {title}</Text>\r\n    <i className=\"icon-settings\" onClick={onClick} />\r\n  </div>\r\n);\r\n\r\nconst Date = ({ id, name, value, onChange, onOpenCalendar }) => {\r\n  const formattedValue = value && moment(value).format(\"YYYY/MM/DD\");\r\n  return (\r\n    <div className=\"date-wrapper\">\r\n      <Text>{name} </Text>\r\n      <div className=\"date\">\r\n        <Input\r\n          type=\"text\"\r\n          value={formattedValue}\r\n          placeholder=\"YYYY/MM/DD\"\r\n          readOnly={true}\r\n        />\r\n        <i className=\"icon-calendar\" onClick={() => onOpenCalendar(id)} />\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          onClick={() =>\r\n            onChange(\r\n              id,\r\n              moment().set({ hour: 0, minute: 0, second: 0 }).toDate()\r\n            )\r\n          }\r\n        >\r\n          Today\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default DateSelector;\r\n","import Component from './DateSelector'; \r\n\r\nexport default Component;","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { COLOR_BLUE } from \"constants/Types\";\r\n\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\n\r\nconst BorderLinearProgress = withStyles((theme) => ({\r\n  root: {\r\n    height: \"1.5rem\",\r\n    borderRadius: 5,\r\n  },\r\n  colorPrimary: {\r\n    backgroundColor: \"white\",\r\n  },\r\n  bar: {\r\n    borderRadius: 5,\r\n    backgroundColor: COLOR_BLUE,\r\n  },\r\n}))(LinearProgress);\r\n\r\nconst ProgressBar = ({ value }) => {\r\n  const [progress, setProgress] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setProgress((prevProgress) =>\r\n        prevProgress >= value ? value : prevProgress + 5\r\n      );\r\n    }, 100);\r\n\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, [value]);\r\n\r\n  return (\r\n    <div className=\"progress-bar\">\r\n      <BorderLinearProgress variant=\"determinate\" value={progress} />\r\n      <span> {value || 0}%</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgressBar;\r\n","import Component from './ProgressBar'; \r\nexport default Component; ","import Component from './SettingsModal'; \r\nexport default Component; ","import React, { useState } from \"react\";\r\n\r\nimport moment from \"moment\";\r\nimport Calendar from \"react-calendar\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\n\r\nimport Input from \"components/Input\";\r\nconst SettingsModal = ({ open, settings, onClose, onSave }) => {\r\n  const [date, setDate] = useState(moment(settings.endDate).toDate());\r\n  const [title, setTitle] = useState(settings.title);\r\n  const [showCalendar, setShowCalendar] = useState(false);\r\n\r\n  const handleChangeDate = (value) => {\r\n    setDate(value);\r\n  };\r\n\r\n  const handleChange = (type, value) => {\r\n    if (type === \"title\") setTitle(value);\r\n  };\r\n\r\n  const toggleCalendar = () => {\r\n    setShowCalendar((prevState) => !prevState);\r\n  };\r\n\r\n  const formattedValue = date && moment(date).format(\"YYYY/MM/DD\");\r\n  return (\r\n    <Dialog\r\n      maxWidth=\"xs\"\r\n      fullWidth={true}\r\n      open={open}\r\n      className=\"settings-modal\"\r\n    >\r\n      <DialogTitle> D-Day Settings</DialogTitle>\r\n      <DialogContent>\r\n        <div className=\"settings\">\r\n          <div className=\"title\"> D-Day Title</div>\r\n          <Input\r\n            type=\"text\"\r\n            value={title || \"\"}\r\n            onChange={(e) => handleChange(\"title\", e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"settings\">\r\n          <div className=\"title\"> End Date</div>\r\n          <Input\r\n            type=\"text\"\r\n            value={formattedValue || \"\"}\r\n            placeholder=\"YYYY/MM/DD\"\r\n            readOnly={true}\r\n          />\r\n          <i className=\"icon-calendar\" onClick={toggleCalendar} />\r\n        </div>\r\n        {showCalendar && (\r\n          <Calendar\r\n            // id=\"settings-calendar\"\r\n            // className=\"hide\"\r\n            value={date}\r\n            locale=\"en-US\"\r\n            minDetail={\"month\"}\r\n            showNeighboringMonth={false}\r\n            onChange={handleChangeDate}\r\n          />\r\n        )}\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onClose} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={() => onSave({title,date})} color=\"primary\">\r\n          Save\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default SettingsModal;\r\n","import moment from \"moment\";\r\nimport Holidays from \"date-holidays\";\r\n\r\nexport const getWorkingDaysCount = (start, end) => {\r\n  const hd = new Holidays();\r\n  hd.init(\"KR\");\r\n\r\n  const startYear = moment(start).year();\r\n  const endYear = moment(end).year();\r\n\r\n  let years = [];\r\n  let holidays = [];\r\n\r\n  for (let i = 0; i <= endYear - startYear; i++) {\r\n    years.push(startYear + i);\r\n  }\r\n\r\n  years.forEach((year) => holidays.push(...hd.getHolidays(year)));\r\n\r\n  let count = 0;\r\n  holidays = formatHolidays(holidays);\r\n\r\n  const daysDiff = moment(end).diff(moment(start), \"days\");\r\n\r\n  for (let i = 0; i < daysDiff + 1; i++) {\r\n    const current = moment(start).add(i, \"days\");\r\n    const isHoliday = holidays.find(\r\n      (h) => h.date === current.format(\"YYYY-MM-DD\")\r\n    );\r\n\r\n    if (!isHoliday && current.day() !== 6 && current.day() !== 0) {\r\n      count++;\r\n    }\r\n  }\r\n\r\n  return {\r\n    workDays: count,\r\n    calendarDays: daysDiff,\r\n  };\r\n};\r\n\r\nconst formatHolidays = (list) => {\r\n  let holidays = [];\r\n\r\n  list.forEach((holiday) => {\r\n    let { start, end, name } = holiday;\r\n    if (name === \"설날\" || name === \"추석\") {\r\n      start = moment(start).subtract(1, \"days\");\r\n      end = moment(start).add(3, \"days\");\r\n    }\r\n\r\n    const dayDiff = moment(end).diff(moment(start), \"days\");\r\n\r\n    for (let i = 0; i < dayDiff; i++) {\r\n      holidays.push({\r\n        date: moment(start).add(i, \"days\").format(\"YYYY-MM-DD\"),\r\n        name: name,\r\n      });\r\n    }\r\n  });\r\n  return holidays;\r\n};\r\n","import DateCalculator from './DateCalculator'; \r\n\r\nexport default DateCalculator; \r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport moment from \"moment\";\r\n\r\nimport { TYPE_START, TYPE_END, SETTINGS_KEY } from \"constants/Types\";\r\n\r\nimport DateSelector from \"components/DateSelector\";\r\nimport Card from \"components/Card\";\r\nimport ProgressBar from \"components/ProgressBar\";\r\nimport SettingsModal from \"components/SettingsModal\";\r\nimport CalendarModal from \"components/DateSelector/CalendarModal\";\r\n\r\nimport { getWorkingDaysCount } from \"utils/Calculate\";\r\nimport { getLocalStorage, setLocalStorage } from \"utils/Storage\";\r\n\r\nconst DateCalculator = () => {\r\n  const [startDate, setStartDate] = useState(null);\r\n  const [endDate, setEndDate] = useState(null);\r\n\r\n  const [workDays, setWorkDays] = useState(\"-\");\r\n  const [calendarDays, setCalendarDays] = useState(\"-\");\r\n  const [percent, setPercent] = useState(0);\r\n\r\n  const [openSettings, setOpenSettings] = useState(false);\r\n  const [settings, setSettings] = useState({});\r\n\r\n  useEffect(() => {\r\n    loadFromLocalStorage();\r\n  }, []);\r\n\r\n  const loadFromLocalStorage = () => {\r\n    const settings = getLocalStorage(SETTINGS_KEY);\r\n    if (!settings) return;\r\n\r\n    const { endDate } = settings;\r\n    const [year, month, date] = endDate.split(\"/\");\r\n\r\n    setStartDate(moment().toDate());\r\n    setEndDate(moment({ year, month: month - 1, date }).toDate());\r\n    setSettings(settings);\r\n  };\r\n\r\n  const toggleOpen = () => {\r\n    setOpenSettings((prevState) => !prevState);\r\n  };\r\n\r\n  const handleDateChange = (type, value) => {\r\n    if (type === TYPE_START) setStartDate(value);\r\n    if (type === TYPE_END) setEndDate(value);\r\n  };\r\n\r\n  const handleCalculate = () => {\r\n    if (!startDate || !endDate || endDate < startDate) return;\r\n\r\n    const days = getWorkingDaysCount(startDate, endDate);\r\n    setCalendarDays(days.calendarDays || \"-\");\r\n    setWorkDays(days.workDays || \"-\");\r\n\r\n    const baseDate = moment(endDate).subtract(2, \"years\");\r\n    const passedDates = moment(startDate).diff(moment(baseDate), \"days\") + 1;\r\n    const percent = (passedDates / (365 * 2)) * 100;\r\n\r\n    setPercent(Number.parseFloat(percent.toFixed(1)));\r\n  };\r\n\r\n  const handleSaveSettings = (data) => {\r\n    const { title, date } = data;\r\n    const ddaySettings = {\r\n      title,\r\n      endDate: moment(date).format(\"YYYY/MM/DD\"),\r\n    };\r\n\r\n    setLocalStorage(SETTINGS_KEY, ddaySettings);\r\n    toggleOpen();\r\n\r\n    loadFromLocalStorage();\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-content\">\r\n      <div className=\"content-wrapper\">\r\n        <DateSelector\r\n          startDate={startDate}\r\n          endDate={endDate}\r\n          title={settings.title}\r\n          onDateChange={handleDateChange}\r\n          onCalculate={handleCalculate}\r\n          onOpenSettings={toggleOpen}\r\n        />\r\n        <Card align=\"left\">\r\n          <i className=\"icon-work\" />\r\n          {workDays} working days\r\n        </Card>\r\n        <Card align=\"left\">\r\n          <i className=\"icon-date\" />\r\n          {calendarDays} calendar days\r\n        </Card>\r\n        <ProgressBar value={percent} />\r\n\r\n        {openSettings && (\r\n          <SettingsModal\r\n            open={openSettings}\r\n            settings={settings}\r\n            onClose={toggleOpen}\r\n            onSave={handleSaveSettings}\r\n          />\r\n        )}\r\n        {/* <div> message..</div> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DateCalculator;\r\n","const getLocalStorage = (key) => {\r\n  if (!key || key === \"\") return;\r\n\r\n  const value = localStorage.getItem(key);\r\n  if (value) return JSON.parse(value);\r\n};\r\n\r\nconst setLocalStorage = (key, value) => {\r\n  if (!key || key === \"\") return;\r\n\r\n  const data = JSON.stringify(value);\r\n  localStorage.setItem(key, data);\r\n};\r\n\r\nexport { getLocalStorage, setLocalStorage };\r\n","export default __webpack_public_path__ + \"static/media/dobby.b1cb7c5e.png\";","import React, { useEffect } from \"react\";\r\nimport \"styles/app.scss\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\nimport DateCalculator from \"containers\";\r\nimport ReactGA from \"react-ga\";\r\nimport DobbyIcon from \"assets/images/dobby.png\";\r\n\r\nfunction App() {\r\n  useEffect(() => {\r\n    ReactGA.initialize(\"G-HXVX2W66FB\");\r\n    ReactGA.pageview(window.location.pathname + window.location.search);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <DateCalculator />\r\n      {/* <div className=\"dobby-wrapper\">\r\n        <img src={DobbyIcon} alt=\"dobby\"/>\r\n      </div> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}