{"version":3,"sources":["constants/Types.js","components/Card/Card.js","components/Card/index.js","components/Text/index.js","components/Text/Text.js","components/Input/Input.js","components/Input/index.js","components/DateSelector/DateSelector.js","components/DateSelector/index.js","components/ProgressBar/ProgressBar.js","components/ProgressBar/index.js","components/SettingsModal/index.js","components/SettingsModal/SettingsModal.js","utils/Calculate.js","containers/index.js","containers/DateCalculator.js","utils/Storage.js","assets/images/dobby.png","App.js","index.js"],"names":["COLOR_BLUE","TYPE_START","TYPE_END","SETTINGS_KEY","Card","children","className","align","props","cardAlign","classNames","defaultProps","Component","Input","type","value","onChange","placeholder","readOnly","Date","id","name","onToggleCalendar","formattedValue","moment","format","onClick","Button","variant","color","set","hour","minute","second","toDate","locale","minDetail","showNeighboringMonth","startDate","endDate","onDateChange","onCalculate","onOpenSettings","CalculateButton","withStyles","root","backgroundColor","toggleCalendar","calendars","document","getElementsByClassName","startCalendar","endCalendar","classList","contains","remove","add","BorderLinearProgress","theme","height","borderRadius","colorPrimary","bar","LinearProgress","useState","progress","setProgress","useEffect","timer","setInterval","prevProgress","clearInterval","open","settings","onClose","onSave","date","setDate","title","setTitle","showCalendar","setShowCalendar","Dialog","maxWidth","fullWidth","DialogTitle","DialogContent","e","target","prevState","DialogActions","formatHolidays","list","holidays","forEach","holiday","start","end","subtract","dayDiff","diff","i","push","DateCalculator","setStartDate","setEndDate","workDays","setWorkDays","calendarDays","setCalendarDays","percent","setPercent","setOpen","setSettings","loadFromLocalStorage","key","localStorage","getItem","JSON","parse","getLocalStorage","split","year","month","toggleOpen","days","hd","Holidays","init","startYear","endYear","years","getHolidays","count","daysDiff","current","find","h","day","getWorkingDaysCount","baseDate","Number","parseFloat","toFixed","data","ddaySettings","stringify","setItem","setLocalStorage","App","src","DobbyIcon","alt","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.50bb901f.chunk.js","sourcesContent":["export const COLOR_BLUE = \"#4360FB\";\r\nexport const COLOR_NAVY = \"#1B256D\";\r\n\r\nexport const TYPE_START = \"START\";\r\nexport const TYPE_END = \"END\";\r\n\r\nexport const MESSAGE_COMMON = 'COMMON'; \r\nexport const MESSAGE_DAYS = 'DAYS'; \r\nexport const MESSAGE_WEEKS = 'WEEKS'; \r\nexport const MESSAGE_MONTHS = 'MONTHS'; \r\n\r\nexport const SETTINGS_KEY = 'D_DAY_SETTINGS'; ","import React from \"react\";\r\n\r\nconst Card = ({ children, className, align, ...props }) => {\r\n  const cardAlign = `align-${align}`;\r\n  const classNames = `card ${className || ''} ${cardAlign}`; \r\n  return (\r\n    <div className={classNames} {...props}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nCard.defaultProps = {\r\n  children: <div></div>,\r\n  align: \"center\",\r\n};\r\n\r\nexport default Card;\r\n","import Component from './Card'; \r\n\r\nexport default Component;","import Component from './Text'; \r\n\r\nexport default Component; ","import React from \"react\";\r\n\r\nconst Text = ({ children, ...props }) => (\r\n  <span className=\"text\" {...props}>{children}</span>\r\n);\r\n\r\nexport default Text;\r\n","import React from \"react\";\r\n\r\nconst Input = ({ type, value, onChange,placeholder, readOnly, ...props }) => {\r\n  return (\r\n    <input\r\n      type={type}\r\n      value={value}\r\n      placeholder={placeholder}\r\n      readOnly={readOnly}\r\n      onChange={onChange}\r\n    />\r\n  );\r\n};\r\n\r\nInput.defaultProps = {\r\n  type: \"text\",\r\n  value: \"\",\r\n  readOnly: false,\r\n};\r\n\r\nexport default Input;\r\n","import Component from './Input'; \r\nexport default Component;","import React from \"react\";\r\n\r\nimport moment from \"moment\";\r\n\r\nimport { COLOR_BLUE, TYPE_START, TYPE_END } from \"constants/Types\";\r\n\r\nimport Card from \"components/Card\";\r\nimport Text from \"components/Text\";\r\nimport Input from 'components/Input'; \r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport Calendar from \"react-calendar\";\r\n\r\nconst DateSelector = ({\r\n  startDate,\r\n  endDate,\r\n  onDateChange,\r\n  onCalculate,\r\n  onOpenSettings,\r\n}) => {\r\n  const CalculateButton = withStyles({\r\n    root: {\r\n      backgroundColor: COLOR_BLUE,\r\n    },\r\n  })(Button);\r\n\r\n  const toggleCalendar = (type) => {\r\n    const calendars = document.getElementsByClassName(\"react-calendar\");\r\n    const [startCalendar, endCalendar] = calendars;\r\n\r\n    if (type === TYPE_START) {\r\n      const isHidden = startCalendar.classList.contains(\"hide\");\r\n      if (isHidden) {\r\n        startCalendar.classList.remove(\"hide\");\r\n        endCalendar.classList.add(\"hide\");\r\n      } else {\r\n        startCalendar.classList.add(\"hide\");\r\n      }\r\n    }\r\n\r\n    if (type === TYPE_END) {\r\n      const isHidden = endCalendar.classList.contains(\"hide\");\r\n\r\n      isHidden\r\n        ? endCalendar.classList.remove(\"hide\")\r\n        : endCalendar.classList.add(\"hide\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card className=\"date-selector\">\r\n      <i className=\"icon-settings\" onClick={onOpenSettings} />\r\n      <Date\r\n        id={TYPE_START}\r\n        name=\"Start Date\"\r\n        value={startDate}\r\n        onChange={onDateChange}\r\n        onToggleCalendar={toggleCalendar}\r\n      />\r\n      <Date\r\n        id={TYPE_END}\r\n        name=\"End Date\"\r\n        value={endDate}\r\n        onChange={onDateChange}\r\n        onToggleCalendar={toggleCalendar}\r\n      />\r\n      <CalculateButton\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={onCalculate}\r\n      >\r\n        Calculate\r\n      </CalculateButton>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst Date = ({ id, name, value, onChange, onToggleCalendar }) => {\r\n  const formattedValue = value && moment(value).format(\"YYYY/MM/DD\");\r\n  return (\r\n    <div className=\"date-wrapper\">\r\n      <Text>{name} </Text> \r\n      <Input\r\n        type=\"text\"\r\n        value={formattedValue}\r\n        placeholder=\"YYYY/MM/DD\"\r\n        readOnly={true}\r\n      />\r\n      <i className=\"icon-calendar\" onClick={() => onToggleCalendar(id)} />\r\n      <Button\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n        onClick={() =>\r\n          onChange(id, moment().set({ hour: 0, minute: 0, second: 0 }).toDate())\r\n        }\r\n      >\r\n        Today\r\n      </Button>\r\n      <Calendar\r\n        className=\"hide\"\r\n        value={value}\r\n        locale=\"en-US\"\r\n        minDetail={\"month\"}\r\n        showNeighboringMonth={false}\r\n        onChange={(value) => {\r\n          onChange(id, value);\r\n          onToggleCalendar(id);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default DateSelector;\r\n","import Component from './DateSelector'; \r\n\r\nexport default Component;","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { COLOR_BLUE } from \"constants/Types\";\r\n\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\n\r\nconst BorderLinearProgress = withStyles((theme) => ({\r\n  root: {\r\n    height: \"1.5rem\",\r\n    borderRadius: 5,\r\n  },\r\n  colorPrimary: {\r\n    backgroundColor: \"white\",\r\n  },\r\n  bar: {\r\n    borderRadius: 5,\r\n    backgroundColor: COLOR_BLUE,\r\n  },\r\n}))(LinearProgress);\r\n\r\nconst ProgressBar = ({ value }) => {\r\n  const [progress, setProgress] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setProgress((prevProgress) =>\r\n        prevProgress >= value ? value : prevProgress + 5\r\n      );\r\n    }, 100);\r\n\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, [value]);\r\n\r\n  return (\r\n    <div className=\"progress-bar\">\r\n      <BorderLinearProgress variant=\"determinate\" value={progress} />\r\n      <span> {value || 0}%</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgressBar;\r\n","import Component from './ProgressBar'; \r\nexport default Component; ","import Component from './SettingsModal'; \r\nexport default Component; ","import React, { useState } from \"react\";\r\n\r\nimport moment from \"moment\";\r\nimport Calendar from \"react-calendar\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\n\r\nimport Input from \"components/Input\";\r\nconst SettingsModal = ({ open, settings, onClose, onSave }) => {\r\n  const [date, setDate] = useState(moment(settings.endDate).toDate());\r\n  const [title, setTitle] = useState(settings.title);\r\n  const [showCalendar, setShowCalendar] = useState(false);\r\n\r\n  const handleChangeDate = (value) => {\r\n    setDate(value);\r\n  };\r\n\r\n  const handleChange = (type, value) => {\r\n    if (type === \"title\") setTitle(value);\r\n  };\r\n\r\n  const toggleCalendar = () => {\r\n    setShowCalendar((prevState) => !prevState);\r\n  };\r\n\r\n  const formattedValue = date && moment(date).format(\"YYYY/MM/DD\");\r\n  return (\r\n    <Dialog\r\n      maxWidth=\"xs\"\r\n      fullWidth={true}\r\n      open={open}\r\n      className=\"settings-modal\"\r\n    >\r\n      <DialogTitle> D-Day Settings</DialogTitle>\r\n      <DialogContent>\r\n        <div className=\"settings\">\r\n          <div className=\"title\"> D-Day Title</div>\r\n          <Input\r\n            type=\"text\"\r\n            value={title || \"\"}\r\n            onChange={(e) => handleChange(\"title\", e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"settings\">\r\n          <div className=\"title\"> End Date</div>\r\n          <Input\r\n            type=\"text\"\r\n            value={formattedValue || \"\"}\r\n            placeholder=\"YYYY/MM/DD\"\r\n            readOnly={true}\r\n          />\r\n          <i className=\"icon-calendar\" onClick={toggleCalendar} />\r\n        </div>\r\n        {showCalendar && (\r\n          <Calendar\r\n            // id=\"settings-calendar\"\r\n            // className=\"hide\"\r\n            value={date}\r\n            locale=\"en-US\"\r\n            minDetail={\"month\"}\r\n            showNeighboringMonth={false}\r\n            onChange={handleChangeDate}\r\n          />\r\n        )}\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onClose} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={() => onSave({title,date})} color=\"primary\">\r\n          Save\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default SettingsModal;\r\n","import moment from \"moment\";\r\nimport Holidays from \"date-holidays\";\r\n\r\nexport const getWorkingDaysCount = (start, end) => {\r\n  const hd = new Holidays();\r\n  hd.init(\"KR\");\r\n\r\n  const startYear = moment(start).year();\r\n  const endYear = moment(end).year();\r\n\r\n  let years = [];\r\n  let holidays = [];\r\n\r\n  for (let i = 0; i <= endYear - startYear; i++) {\r\n    years.push(startYear + i);\r\n  }\r\n\r\n  years.forEach((year) => holidays.push(...hd.getHolidays(year)));\r\n\r\n  let count = 0;\r\n  holidays = formatHolidays(holidays);\r\n\r\n  const daysDiff = moment(end).diff(moment(start), \"days\");\r\n\r\n  for (let i = 0; i < daysDiff + 1; i++) {\r\n    const current = moment(start).add(i, \"days\");\r\n    const isHoliday = holidays.find(\r\n      (h) => h.date === current.format(\"YYYY-MM-DD\")\r\n    );\r\n\r\n    if (!isHoliday && current.day() !== 6 && current.day() !== 0) {\r\n      count++;\r\n    }\r\n  }\r\n\r\n  return {\r\n    workDays: count,\r\n    calendarDays: daysDiff,\r\n  };\r\n};\r\n\r\nconst formatHolidays = (list) => {\r\n  let holidays = [];\r\n\r\n  list.forEach((holiday) => {\r\n    let { start, end, name } = holiday;\r\n    if (name === \"설날\" || name === \"추석\") {\r\n      start = moment(start).subtract(1, \"days\");\r\n      end = moment(start).add(3, \"days\");\r\n    }\r\n\r\n    const dayDiff = moment(end).diff(moment(start), \"days\");\r\n\r\n    for (let i = 0; i < dayDiff; i++) {\r\n      holidays.push({\r\n        date: moment(start).add(i, \"days\").format(\"YYYY-MM-DD\"),\r\n        name: name,\r\n      });\r\n    }\r\n  });\r\n  return holidays;\r\n};\r\n","import DateCalculator from './DateCalculator'; \r\n\r\nexport default DateCalculator; \r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport moment from \"moment\";\r\n\r\nimport { TYPE_START, TYPE_END, SETTINGS_KEY } from \"constants/Types\";\r\n\r\nimport DateSelector from \"components/DateSelector\";\r\nimport Card from \"components/Card\";\r\nimport ProgressBar from \"components/ProgressBar\";\r\nimport SettingsModal from \"components/SettingsModal\";\r\n\r\nimport { getWorkingDaysCount } from \"utils/Calculate\";\r\nimport { getLocalStorage, setLocalStorage } from \"utils/Storage\";\r\n\r\nconst DateCalculator = () => {\r\n  const [startDate, setStartDate] = useState(null);\r\n  const [endDate, setEndDate] = useState(null);\r\n\r\n  const [workDays, setWorkDays] = useState(\"-\");\r\n  const [calendarDays, setCalendarDays] = useState(\"-\");\r\n  const [percent, setPercent] = useState(0);\r\n  \r\n  const [open, setOpen] = useState(false);\r\n  const [settings, setSettings] = useState({}); \r\n\r\n  useEffect(() => {\r\n    loadFromLocalStorage();\r\n  }, []);\r\n\r\n  const loadFromLocalStorage = () => {\r\n    const settings = getLocalStorage(SETTINGS_KEY);\r\n    if (!settings) return;\r\n\r\n    const { title, endDate } = settings;\r\n    const [year, month, date] = endDate.split(\"/\");\r\n\r\n    setStartDate(moment().toDate());\r\n    setEndDate(moment({ year, month: month - 1, date }).toDate()); \r\n    setSettings(settings); \r\n  }; \r\n  \r\n  const toggleOpen = () => {\r\n    setOpen((prevState) => !prevState);\r\n  };\r\n\r\n  const handleDateChange = (type, value) => {\r\n    if (type === TYPE_START) setStartDate(value);\r\n    if (type === TYPE_END) setEndDate(value);\r\n  };\r\n\r\n  const handleCalculate = () => {\r\n    if (!startDate || !endDate || endDate < startDate) return;\r\n\r\n    const days = getWorkingDaysCount(startDate, endDate);\r\n    setCalendarDays(days.calendarDays || \"-\");\r\n    setWorkDays(days.workDays || \"-\");\r\n\r\n    const baseDate = moment(endDate).subtract(2, \"years\");\r\n    const passedDates = moment(startDate).diff(moment(baseDate), \"days\") + 1;\r\n    const percent = (passedDates / (365 * 2)) * 100;\r\n\r\n    setPercent(Number.parseFloat(percent.toFixed(1)));\r\n  };\r\n\r\n  const handleSaveSettings = (data) => {\r\n    const { title, date } = data;\r\n    const ddaySettings = {\r\n      title,\r\n      endDate: moment(date).format(\"YYYY/MM/DD\"),\r\n    };\r\n\r\n    setLocalStorage(SETTINGS_KEY, ddaySettings);\r\n    toggleOpen(); \r\n\r\n    loadFromLocalStorage(); \r\n  };\r\n\r\n  return (\r\n    <div className=\"main-content\">\r\n      <div className=\"content-wrapper\">\r\n        <DateSelector\r\n          startDate={startDate}\r\n          endDate={endDate}\r\n          onDateChange={handleDateChange}\r\n          onCalculate={handleCalculate}\r\n          onOpenSettings={toggleOpen}\r\n        />\r\n        <Card align=\"left\">\r\n          <i className=\"icon-work\" />\r\n          {workDays} working days\r\n        </Card>\r\n        <Card align=\"left\">\r\n          <i className=\"icon-date\" />\r\n          {calendarDays} calendar days\r\n        </Card>\r\n        <ProgressBar value={percent} />\r\n\r\n        {open && (\r\n          <SettingsModal\r\n            open={open}\r\n            settings={settings}\r\n            onClose={toggleOpen}\r\n            onSave={handleSaveSettings}\r\n          />\r\n        )}\r\n\r\n        {/* <div> message..</div> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DateCalculator;\r\n","const getLocalStorage = (key) => {\r\n  if (!key || key === \"\") return;\r\n\r\n  const value = localStorage.getItem(key);\r\n  if (value) return JSON.parse(value);\r\n};\r\n\r\nconst setLocalStorage = (key, value) => {\r\n  if (!key || key === \"\") return;\r\n\r\n  const data = JSON.stringify(value);\r\n  localStorage.setItem(key, data);\r\n};\r\n\r\nexport { getLocalStorage, setLocalStorage };\r\n","export default __webpack_public_path__ + \"static/media/dobby.b1cb7c5e.png\";","import \"styles/app.scss\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\nimport DateCalculator from \"containers\";\r\n\r\nimport DobbyIcon from \"assets/images/dobby.png\";\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <DateCalculator />\r\n      <div className=\"dobby-wrapper\">\r\n        <img src={DobbyIcon} alt=\"dobby\"/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}