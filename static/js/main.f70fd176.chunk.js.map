{"version":3,"sources":["constants/Types.js","components/Card/Card.js","components/Card/index.js","components/Text/index.js","components/Text/Text.js","components/Input/Input.js","components/Input/index.js","components/DateSelector/DateSelector.js","components/DateSelector/index.js","components/ProgressBar/ProgressBar.js","components/ProgressBar/index.js","components/SettingsModal/index.js","components/SettingsModal/SettingsModal.js","components/TimeCounter/TimeCounter.js","components/TimeCounter/index.js","utils/Calculate.js","data/Messages.js","containers/DateCalculator.js","containers/index.js","utils/Storage.js","utils/Message.js","components/Feedback/Feedback.js","components/Icons/Icons.js","components/Feedback/index.js","components/Loader/index.js","components/Loader/Loader.js","App.js","index.js"],"names":["COLOR_BLUE","TYPE_START","TYPE_END","MESSAGE_COMMON","MESSAGE_DAYS","MESSAGE_NEAREST_DAYS","MESSAGE_WEEKS","MESSAGE_MONTHS","SETTINGS_KEY","DATE_FORMAT","STATUS_LOADING","Card","children","className","align","outlined","props","cardAlign","cardStyle","classNames","defaultProps","Component","Input","type","value","onChange","placeholder","readOnly","Date","id","name","onToggleCalendar","formattedValue","moment","format","onClick","Button","variant","color","set","hour","minute","second","toDate","locale","minDetail","nextLabel","prevLabel","next2Label","prev2Label","showNeighboringMonth","startDate","endDate","onDateChange","onCalculate","CalculateButton","withStyles","root","backgroundColor","useEffect","window","addEventListener","resizeCalendar","removeEventListener","CALENDAR_WIDTH","activeCalendar","document","querySelector","previousElementSibling","getBoundingClientRect","height","x","left","y","top","style","clientWidth","body","width","toggleCalendar","calendars","getElementsByClassName","startCalendar","endCalendar","classList","contains","remove","add","onOpenCalendar","BorderLinearProgress","theme","borderRadius","colorPrimary","bar","LinearProgress","useState","progress","setProgress","timer","setInterval","prevProgress","clearInterval","open","settings","onClose","onSave","date","setDate","title","setTitle","showCalendar","setShowCalendar","Dialog","maxWidth","fullWidth","DialogTitle","DialogContent","e","target","prevState","DialogActions","TimeCard","Colon","timeleft","setTimeleft","end","now","diff","seconds","Math","floor","minutes","hours","days","isNaN","formatHolidays","list","holidays","forEach","holiday","start","subtract","dayDiff","i","push","messages","Type","text","n","AddEvent","AddButton","justifySelf","startIcon","SettingsInfo","onLoadSettings","onOpenSettings","DateCalculator","setStartDate","setEndDate","prevEndDate","ref","useRef","current","usePrevious","workDays","setWorkDays","calendarDays","setCalendarDays","percent","setPercent","message","setMessage","openSettings","setOpenSettings","setSettings","showTimer","setTimer","loadFromLocalStorage","isStartDateToday","isEndDateSame","key","localStorage","getItem","JSON","parse","getLocalStorage","split","year","month","h","m","s","toggleOpen","initData","hd","Holidays","init","startYear","endYear","years","getHolidays","count","daysDiff","find","day","getWorkingDaysCount","baseDate","Number","parseFloat","toFixed","randomMessage","randomIdx","random","length","paramByType","ceil","getRandomMessage","data","ddaySettings","stringify","setItem","setLocalStorage","icons","icon","class","onToggle","selected","setSelected","comment","setComment","status","setStatus","sendFeedback","a","url","URL","process","params","rating","search","URLSearchParams","fetch","toString","method","mode","headers","then","res","showMessage","catch","error","console","callback","getElementById","toggle","display","setTimeout","map","rows","maxlength","spellcheck","autocomplete","required","disabled","Message","App","imageLoading","setImageLoading","log","fetchImage","Snowflakes","speed","minSize","maxSize","minOpacity","axios","get","imgRequest","src","toggleFeedback","alt","onLoad","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f70fd176.chunk.js","sourcesContent":["export const COLOR_BLUE = \"#4360FB\";\r\nexport const COLOR_NAVY = \"#1B256D\";\r\n\r\nexport const TYPE_START = \"START\";\r\nexport const TYPE_END = \"END\";\r\n\r\nexport const MESSAGE_COMMON = \"COMMON\";\r\nexport const MESSAGE_DAYS = \"DAYS\";\r\nexport const MESSAGE_NEAREST_DAYS = \"NEAREST_DAYS\";\r\nexport const MESSAGE_WEEKS = \"WEEKS\";\r\nexport const MESSAGE_MONTHS = \"MONTHS\";\r\nexport const MESSAGE_D_DAY = \"드디어 만기일 이예요!!! 축하합니다🎉🎁\";\r\n\r\nexport const SETTINGS_KEY = \"D_DAY_SETTINGS\";\r\n\r\nexport const DATE_FORMAT = \"YYYY/MM/DD\";\r\n\r\nexport const STATUS_INIT = \"STATUS_INIT\";\r\nexport const STATUS_SUCCESS = \"STATUS_SUCCESS\";\r\nexport const STATUS_LOADING = \"STATUS_LOADING\";\r\nexport const STATUS_FAIL = \"STATUS_FAIL\";\r\n","import React from \"react\";\r\n\r\nconst Card = ({ children, className, align, outlined, ...props }) => {\r\n  const cardAlign = `align-${align}`;\r\n  const cardStyle = outlined ? \"outlined\" : \"\";\r\n  const classNames = `card ${className || \"\"} ${cardAlign} ${cardStyle}`;\r\n  return (\r\n    <div className={classNames} {...props}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nCard.defaultProps = {\r\n  children: <div></div>,\r\n  align: \"center\",\r\n};\r\n\r\nexport default Card;\r\n","import Component from './Card'; \r\n\r\nexport default Component;","import Component from './Text'; \r\n\r\nexport default Component; ","import React from \"react\";\r\n\r\nconst Text = ({ children, ...props }) => (\r\n  <span className=\"text\" {...props}>{children}</span>\r\n);\r\n\r\nexport default Text;\r\n","import React from \"react\";\r\n\r\nconst Input = ({ type, value, onChange,placeholder, readOnly, ...props }) => {\r\n  return (\r\n    <input\r\n      type={type}\r\n      value={value}\r\n      placeholder={placeholder}\r\n      readOnly={readOnly}\r\n      onChange={onChange}\r\n    />\r\n  );\r\n};\r\n\r\nInput.defaultProps = {\r\n  type: \"text\",\r\n  value: \"\",\r\n  readOnly: false,\r\n};\r\n\r\nexport default Input;\r\n","import Component from './Input'; \r\nexport default Component;","import React, { useState, useEffect } from \"react\";\r\n\r\nimport moment from \"moment\";\r\n\r\nimport { COLOR_BLUE, TYPE_START, TYPE_END, DATE_FORMAT } from \"constants/Types\";\r\n\r\nimport Card from \"components/Card\";\r\nimport Text from \"components/Text\";\r\nimport Input from \"components/Input\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Calendar from \"react-calendar\";\r\n\r\nconst DateSelector = ({\r\n  startDate,\r\n  endDate,\r\n  onDateChange,\r\n  onCalculate,\r\n}) => {\r\n\r\n  const CalculateButton = withStyles({\r\n    root: {\r\n      backgroundColor: COLOR_BLUE,\r\n    },\r\n  })(Button);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", resizeCalendar);\r\n    return () => window.removeEventListener(\"resize\", resizeCalendar);\r\n  }, []);\r\n\r\n  /**\r\n   * resize calendar position\r\n   */\r\n  const resizeCalendar = () => {\r\n    let CALENDAR_WIDTH = 350;\r\n    const activeCalendar = document.querySelector(\".react-calendar:not(.hide)\");\r\n\r\n    if (activeCalendar) {\r\n      const icon = activeCalendar.previousElementSibling.previousElementSibling;\r\n      const { height, left: x, top: y } = icon.getBoundingClientRect();\r\n\r\n      activeCalendar.style.top = `${y + height + 13}px`;\r\n\r\n      const { clientWidth } = document.body;\r\n      if (clientWidth < 420) {\r\n        CALENDAR_WIDTH -= 40;\r\n        activeCalendar.style.width = `${CALENDAR_WIDTH}px`;\r\n        activeCalendar.style.left = `${(clientWidth - CALENDAR_WIDTH) / 2}px`;\r\n      } else {\r\n        activeCalendar.style.left = `${x - CALENDAR_WIDTH / 2 + 13}px`;\r\n        activeCalendar.style.width = `${CALENDAR_WIDTH}px`;\r\n      }\r\n    }\r\n  };\r\n\r\n  const toggleCalendar = (type) => {\r\n    const calendars = document.getElementsByClassName(\"react-calendar\");\r\n    const [startCalendar, endCalendar] = calendars;\r\n\r\n    if (type === TYPE_START) {\r\n      const isHidden = startCalendar.classList.contains(\"hide\");\r\n      if (isHidden) {\r\n        startCalendar.classList.remove(\"hide\");\r\n        endCalendar.classList.add(\"hide\");\r\n        resizeCalendar(TYPE_START);\r\n      } else {\r\n        startCalendar.classList.add(\"hide\");\r\n      }\r\n    }\r\n\r\n    if (type === TYPE_END) {\r\n      const isHidden = endCalendar.classList.contains(\"hide\");\r\n\r\n      if (isHidden) {\r\n        endCalendar.classList.remove(\"hide\");\r\n        resizeCalendar(TYPE_END);\r\n      } else {\r\n        endCalendar.classList.add(\"hide\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card className=\"date-selector\">\r\n      <Date\r\n        id={TYPE_START}\r\n        name=\"Start Date\"\r\n        value={startDate}\r\n        onChange={onDateChange}\r\n        onOpenCalendar={toggleCalendar}\r\n        onToggleCalendar={toggleCalendar}\r\n      />\r\n      <Date\r\n        id={TYPE_END}\r\n        name=\"End Date\"\r\n        value={endDate}\r\n        onChange={onDateChange}\r\n        onOpenCalendar={toggleCalendar}\r\n        onToggleCalendar={toggleCalendar}\r\n      />\r\n      <CalculateButton\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={onCalculate}\r\n      >\r\n        Calculate\r\n      </CalculateButton>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst Date = ({ id, name, value, onChange, onToggleCalendar }) => {\r\n  const formattedValue = value && moment(value).format(DATE_FORMAT);\r\n  return (\r\n    <div className=\"date-wrapper\">\r\n      <Text>{name} </Text>\r\n      <div className=\"date\">\r\n        <Input\r\n          type=\"text\"\r\n          value={formattedValue}\r\n          placeholder={DATE_FORMAT}\r\n          readOnly={true}\r\n        />\r\n        <i className=\"icon-calendar\" onClick={() => onToggleCalendar(id)} />\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          onClick={() =>\r\n            onChange(\r\n              id,\r\n              moment().set({ hour: 0, minute: 0, second: 0 }).toDate()\r\n            )\r\n          }\r\n        >\r\n          Today\r\n        </Button>\r\n        <Calendar\r\n          className=\"hide\"\r\n          value={value}\r\n          locale=\"en-US\"\r\n          minDetail={\"month\"} \r\n          nextLabel = {<i className=\"icon-caret-right\"/>}\r\n          prevLabel = {<i className=\"icon-caret-right flip\"/>}\r\n          next2Label= {<div />}\r\n          prev2Label= {<div />}\r\n          \r\n          showNeighboringMonth={false}\r\n          onChange={(value) => {\r\n            onChange(id, value);\r\n            onToggleCalendar(id);\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default DateSelector;\r\n","import Component from './DateSelector'; \r\n\r\nexport default Component;","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { COLOR_BLUE } from \"constants/Types\";\r\n\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\n\r\nconst BorderLinearProgress = withStyles((theme) => ({\r\n  root: {\r\n    height: \"1.5rem\",\r\n    borderRadius: 5,\r\n  },\r\n  colorPrimary: {\r\n    backgroundColor: \"white\",\r\n  },\r\n  bar: {\r\n    borderRadius: 5,\r\n    backgroundColor: COLOR_BLUE,\r\n  },\r\n}))(LinearProgress);\r\n\r\nconst ProgressBar = ({ value }) => {\r\n  const [progress, setProgress] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setProgress((prevProgress) =>\r\n        prevProgress >= value ? value : prevProgress + 5\r\n      );\r\n    }, 100);\r\n\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, [value]);\r\n\r\n  return (\r\n    <div className=\"progress-bar\">\r\n      <BorderLinearProgress variant=\"determinate\" value={progress} />\r\n      <span> {value || 0}%</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgressBar;\r\n","import Component from './ProgressBar'; \r\nexport default Component; ","import Component from './SettingsModal'; \r\nexport default Component; ","import React, { useState } from \"react\";\r\n\r\nimport moment from \"moment\";\r\nimport Calendar from \"react-calendar\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\n\r\nimport Input from \"components/Input\";\r\nconst SettingsModal = ({ open, settings, onClose, onSave }) => {\r\n  const [date, setDate] = useState(settings ? moment(settings.endDate).toDate() : null);\r\n  const [title, setTitle] = useState(settings ? settings.title : '');\r\n  const [showCalendar, setShowCalendar] = useState(false);\r\n\r\n  const handleChangeDate = (value) => {\r\n    setDate(value);\r\n  };\r\n\r\n  const handleChange = (type, value) => {\r\n    if (type === \"title\") setTitle(value);\r\n  };\r\n\r\n  const toggleCalendar = () => {\r\n    setShowCalendar((prevState) => !prevState);\r\n  };\r\n\r\n  const formattedValue = date && moment(date).format(\"YYYY/MM/DD\");\r\n  return (\r\n    <Dialog\r\n      maxWidth=\"xs\"\r\n      fullWidth={true}\r\n      open={open}\r\n      className=\"settings-modal christmas-theme\"\r\n    >\r\n      <DialogTitle> D-Day Settings</DialogTitle>\r\n      <DialogContent>\r\n        <div className=\"settings\">\r\n          <div className=\"title\"> D-Day Title</div>\r\n          <Input\r\n            type=\"text\"\r\n            value={title || \"\"}\r\n            onChange={(e) => handleChange(\"title\", e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"settings\">\r\n          <div className=\"title\"> End Date</div>\r\n          <Input\r\n            type=\"text\"\r\n            value={formattedValue || \"\"}\r\n            placeholder=\"YYYY/MM/DD\"\r\n            readOnly={true}\r\n          />\r\n          <i className=\"icon-calendar\" onClick={toggleCalendar} />\r\n        </div>\r\n        {showCalendar && (\r\n          <Calendar\r\n            // id=\"settings-calendar\"\r\n            // className=\"hide\"\r\n            value={date}\r\n            locale=\"en-US\"\r\n            minDetail={\"month\"}\r\n            showNeighboringMonth={false}\r\n            onChange={handleChangeDate}\r\n            nextLabel = {<i className=\"icon-caret-right\"/>}\r\n            prevLabel = {<i className=\"icon-caret-right flip\"/>}\r\n            next2Label= {<div />}\r\n            prev2Label= {<div />}\r\n          />\r\n        )}\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onClose} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={() => onSave({title,date})} color=\"primary\">\r\n          Save\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default SettingsModal;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport moment from \"moment\";\r\n\r\nimport Card from \"components/Card\";\r\n\r\nconst TimeCounter = ({ endDate }) => {\r\n  const [timeleft, setTimeleft] = useState({});\r\n  let timer = null;\r\n\r\n  useEffect(() => {\r\n    timer = setInterval(() => {\r\n      const end = moment(endDate);\r\n      const now = moment();\r\n      const diff = end.diff(now);\r\n\r\n      const seconds = Math.floor((diff / 1000) % 60);\r\n      const minutes = Math.floor(diff / 1000 / 60) % 60;\r\n      const hours = Math.floor((diff / (1000 * 60 * 60)) % 24);\r\n      const days = Math.floor(diff / (1000 * 60 * 60 * 24));\r\n\r\n      setTimeleft({\r\n        days: isNaN(days) ? \"-\" : days,\r\n        hours: isNaN(hours) ? \"-\" : hours,\r\n        minutes: isNaN(minutes) ? \"-\" : minutes,\r\n        seconds: isNaN(seconds) ? \"-\" : seconds,\r\n      });\r\n    }, 1000);\r\n\r\n    return () => {\r\n      if (timer) clearInterval(timer);\r\n    };\r\n  }, [endDate]);\r\n\r\n  const { days = '-', hours = '-', minutes = '-', seconds = '-' } = timeleft;\r\n  return (\r\n    <Card className=\"gradient time-counter\">\r\n      <TimeCard title={\"DAYS\"} value={days} />\r\n      <Colon />\r\n      <TimeCard title={\"HOURS\"} value={hours} />\r\n      <Colon />\r\n      <TimeCard title={\"MINUTES\"} value={minutes} />\r\n      <Colon />\r\n      <TimeCard title={\"SECONDS\"} value={seconds} />\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst TimeCard = ({ title, value }) => (\r\n  <div className=\"time-card\">\r\n    <div className=\"time\"> {value}</div>\r\n    <div className=\"type\"> {title} </div>\r\n  </div>\r\n);\r\n\r\nconst Colon = () => (\r\n  <div className=\"colon\">\r\n    <i className=\"icon-colon\" />\r\n  </div>\r\n);\r\n\r\nexport default TimeCounter;\r\n","import Component from './TimeCounter'; \r\nexport default Component;","import moment from \"moment\";\r\nimport Holidays from \"date-holidays\";\r\n\r\nexport const getWorkingDaysCount = (start, end) => {\r\n  const hd = new Holidays();\r\n  hd.init(\"KR\");\r\n\r\n  const startYear = moment(start).year();\r\n  const endYear = moment(end).year();\r\n\r\n  let years = [];\r\n  let holidays = [];\r\n\r\n  for (let i = 0; i <= endYear - startYear; i++) {\r\n    years.push(startYear + i);\r\n  }\r\n\r\n  years.forEach((year) => holidays.push(...hd.getHolidays(year)));\r\n\r\n  let count = 0;\r\n  holidays = formatHolidays(holidays);\r\n\r\n  const daysDiff = moment(end).diff(moment(start), \"days\");\r\n\r\n  for (let i = 0; i < daysDiff + 1; i++) {\r\n    const current = moment(start).add(i, \"days\");\r\n    const isHoliday = holidays.find(\r\n      (h) => h.date === current.format(\"YYYY-MM-DD\")\r\n    );\r\n\r\n    if (!isHoliday && current.day() !== 6 && current.day() !== 0) {\r\n      count++;\r\n    }\r\n  }\r\n\r\n  return {\r\n    workDays: count,\r\n    calendarDays: daysDiff,\r\n  };\r\n};\r\n\r\nconst formatHolidays = (list) => {\r\n  let holidays = [];\r\n\r\n  list.forEach((holiday) => {\r\n    let { start, end, name } = holiday;\r\n    if (name === \"설날\" || name === \"추석\") {\r\n      start = moment(start).subtract(1, \"days\");\r\n      end = moment(start).add(3, \"days\");\r\n    }\r\n\r\n    const dayDiff = moment(end).diff(moment(start), \"days\");\r\n\r\n    for (let i = 0; i < dayDiff; i++) {\r\n      holidays.push({\r\n        date: moment(start).add(i, \"days\").format(\"YYYY-MM-DD\"),\r\n        name: name,\r\n      });\r\n    }\r\n  });\r\n  return holidays;\r\n};\r\n","import * as Type from \"constants/Types\";\r\n\r\nconst messages = [\r\n  {\r\n    type: Type.MESSAGE_COMMON,\r\n    text: () => \"시간 안갈거 같죠? 금방 옵니다. 화이팅!👻\",\r\n  },\r\n  {\r\n    type: Type.MESSAGE_COMMON,\r\n    text: () => \"만기일이 많이 남았나요..? 도비 포즈를 따라해보세요😎\",\r\n  },\r\n  {\r\n    type: Type.MESSAGE_COMMON,\r\n    text: () => \"디데이 기다리기 지루하신가요..?🥱\",\r\n  },\r\n  {\r\n    type: Type.MESSAGE_COMMON,\r\n    text: () =>\r\n      \"앱 이용에 불편한 점이 있으셨나요? 피드백 버튼을 눌러 의견을 보내주세요!😊 \",\r\n  },\r\n  {\r\n    type: Type.MESSAGE_COMMON,\r\n    text: () => \"만기되면 뭐하실 건가요? 만기계획을 세워보세요!📝\",\r\n  },\r\n  { type: Type.MESSAGE_DAYS, text: (n) => `1600만원 까지 ${n}일 남았어요!` },\r\n  {\r\n    type: Type.MESSAGE_WEEKS,\r\n    text: (n) =>\r\n      n > 0\r\n        ? `1600만원 까지 약 ${n}주 남았어요! 힘내세요🥺`\r\n        : \"드디어 이번주가 만기일 이예요!!💸\",\r\n  },\r\n  {\r\n    type: Type.MESSAGE_MONTHS,\r\n    text: (n) =>\r\n      n > 0\r\n        ? `1600만원 까지 약 ${n}달 남았어요!!!🙂`\r\n        : \"드디어 이번달이 만기일 이예요!!!😭\",\r\n  },\r\n  {\r\n    type: Type.MESSAGE_NEAREST_DAYS,\r\n    text: (n) =>\r\n      n > 0\r\n        ? `D-${n}일이 얼마 남지 않았어요! 화이팅✨`\r\n        : \"만기일이 얼마 남지 않았어요!😀\",\r\n  },\r\n];\r\n\r\nexport default messages;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport moment from \"moment\";\r\n\r\nimport {\r\n  TYPE_START,\r\n  TYPE_END,\r\n  COLOR_BLUE,\r\n  SETTINGS_KEY,\r\n  DATE_FORMAT,\r\n} from \"constants/Types\";\r\n\r\nimport DateSelector from \"components/DateSelector\";\r\nimport Card from \"components/Card\";\r\nimport ProgressBar from \"components/ProgressBar\";\r\nimport SettingsModal from \"components/SettingsModal\";\r\nimport TimeCounter from \"components/TimeCounter\";\r\n\r\nimport { getWorkingDaysCount } from \"utils/Calculate\";\r\nimport { getLocalStorage, setLocalStorage } from \"utils/Storage\";\r\nimport { getRandomMessage } from \"utils/Message\";\r\n\r\nconst AddEvent = ({ onClick }) => {\r\n  const AddButton = withStyles({\r\n    root: {\r\n      backgroundColor: COLOR_BLUE,\r\n      color: \"white\",\r\n      justifySelf: \"end\",\r\n    },\r\n  })(Button);\r\n  return (\r\n    <AddButton\r\n      variant=\"contained\"\r\n      color=\"primary\"\r\n      startIcon={<AddIcon />}\r\n      onClick={onClick}\r\n    >\r\n      Add a new event\r\n    </AddButton>\r\n  );\r\n};\r\n\r\nconst SettingsInfo = ({ settings, onLoadSettings, onOpenSettings }) => {\r\n  return (\r\n    <div className=\"settings-info\">\r\n      <Button variant=\"contained\" color=\"primary\" onClick={onLoadSettings}>\r\n        {settings.title}\r\n      </Button>\r\n      <Button\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n        startIcon={<EditIcon />}\r\n        onClick={onOpenSettings}\r\n      >\r\n        Edit\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\nconst DateCalculator = () => {\r\n  const [startDate, setStartDate] = useState(null);\r\n  const [endDate, setEndDate] = useState(null);\r\n  const prevEndDate = usePrevious(endDate);\r\n\r\n  const [workDays, setWorkDays] = useState(\"-\");\r\n  const [calendarDays, setCalendarDays] = useState(\"-\");\r\n  const [percent, setPercent] = useState(0);\r\n  const [message, setMessage] = useState(\"🎁\");\r\n\r\n  const [openSettings, setOpenSettings] = useState(false);\r\n  const [settings, setSettings] = useState(null);\r\n\r\n  const [showTimer, setTimer] = useState(false);\r\n\r\n  useEffect(() => {\r\n    loadFromLocalStorage();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const isStartDateToday =\r\n      moment(startDate).format(DATE_FORMAT) === moment().format(DATE_FORMAT);\r\n\r\n    const isEndDateSame =\r\n      moment(prevEndDate).format(DATE_FORMAT) ===\r\n      moment(endDate).format(DATE_FORMAT);\r\n\r\n    if (isStartDateToday && isEndDateSame) return;\r\n    setTimer(false);\r\n  }, [startDate, endDate]);\r\n\r\n  function usePrevious(value) {\r\n    const ref = useRef();\r\n    useEffect(() => {\r\n      ref.current = value;\r\n    });\r\n    return ref.current;\r\n  }\r\n\r\n  const loadFromLocalStorage = () => {\r\n    const settings = getLocalStorage(SETTINGS_KEY);\r\n    if (!settings) return;\r\n\r\n    const { endDate } = settings;\r\n    const [year, month, date] = endDate.split(\"/\");\r\n\r\n    setStartDate(moment().set({ h: 0, m: 0, s: 0 }).toDate());\r\n    setEndDate(moment({ year, month: month - 1, date }).toDate());\r\n    setSettings(settings);\r\n  };\r\n\r\n  const toggleOpen = () => {\r\n    setOpenSettings((prevState) => !prevState);\r\n  };\r\n\r\n  const handleDateChange = (type, value) => {\r\n    if (type === TYPE_START) setStartDate(value);\r\n    if (type === TYPE_END) setEndDate(value);\r\n  };\r\n\r\n  const handleCalculate = () => {\r\n    if (\r\n      !startDate ||\r\n      !endDate ||\r\n      endDate < startDate ||\r\n      startDate === endDate\r\n    ) {\r\n      initData();\r\n      return;\r\n    }\r\n\r\n    const { calendarDays, workDays } = getWorkingDaysCount(startDate, endDate);\r\n    setCalendarDays(calendarDays || \"-\");\r\n    setWorkDays(workDays || \"-\");\r\n\r\n    const baseDate = moment(endDate).subtract(2, \"years\");\r\n    const passedDates = moment(startDate).diff(moment(baseDate), \"days\") + 1;\r\n    const percent = (passedDates / (365 * 2)) * 100;\r\n\r\n    if (percent < 0 || percent > 100) {\r\n      setPercent(0);\r\n    } else {\r\n      setPercent(Number.parseFloat(percent.toFixed(1)));\r\n    }\r\n\r\n    const isStartDateToday =\r\n      moment(startDate).format(DATE_FORMAT) === moment().format(DATE_FORMAT);\r\n    if (isStartDateToday) setTimer(true);\r\n\r\n    const randomMessage = getRandomMessage(calendarDays);\r\n    setMessage(randomMessage);\r\n  };\r\n\r\n  const handleSaveSettings = (data) => {\r\n    const { title, date } = data;\r\n    const ddaySettings = {\r\n      title,\r\n      endDate: moment(date).format(DATE_FORMAT),\r\n    };\r\n\r\n    setLocalStorage(SETTINGS_KEY, ddaySettings);\r\n    toggleOpen();\r\n\r\n    loadFromLocalStorage();\r\n  };\r\n\r\n  const initData = () => {\r\n    setWorkDays(\"-\");\r\n    setCalendarDays(\"-\");\r\n    setPercent(0);\r\n    setMessage(\"🎁\")\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-content\">\r\n      <div className=\"content-wrapper\">\r\n        {settings ? (\r\n          <SettingsInfo\r\n            settings={settings}\r\n            onOpenSettings={toggleOpen}\r\n            onLoadSettings={loadFromLocalStorage}\r\n          />\r\n        ) : (\r\n          <AddEvent onClick={toggleOpen} />\r\n        )}\r\n        <DateSelector\r\n          startDate={startDate}\r\n          endDate={endDate}\r\n          title={settings ? settings.title : \"\"}\r\n          onDateChange={handleDateChange}\r\n          onCalculate={handleCalculate}\r\n          onOpenSettings={toggleOpen}\r\n        />\r\n        <Card align=\"left\">\r\n          <i className=\"icon-work\" />\r\n          {workDays} working days\r\n        </Card>\r\n        <Card align=\"left\">\r\n          <i className=\"icon-date\" />\r\n          {calendarDays} calendar days\r\n        </Card>\r\n        <ProgressBar value={percent} />\r\n        <TimeCounter endDate={showTimer ? endDate : null} />\r\n\r\n        <Card outlined={true}>{message}</Card>\r\n        {openSettings && (\r\n          <SettingsModal\r\n            open={openSettings}\r\n            settings={settings || {}}\r\n            onClose={toggleOpen}\r\n            onSave={handleSaveSettings}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DateCalculator;\r\n","import DateCalculator from './DateCalculator'; \r\n\r\nexport default DateCalculator; \r\n","const getLocalStorage = (key) => {\r\n  if (!key || key === \"\") return;\r\n\r\n  const value = localStorage.getItem(key);\r\n  if (value) return JSON.parse(value);\r\n};\r\n\r\nconst setLocalStorage = (key, value) => {\r\n  if (!key || key === \"\") return;\r\n\r\n  const data = JSON.stringify(value);\r\n  localStorage.setItem(key, data);\r\n};\r\n\r\nexport { getLocalStorage, setLocalStorage };\r\n","import * as Type from \"constants/Types\";\r\nimport messages from \"data/Messages\";\r\n\r\nexport const getRandomMessage = (days) => {\r\n  const randomIdx = Math.floor(Math.random() * messages.length) + 0;\r\n\r\n  const { type, text } = messages[randomIdx];\r\n\r\n  const paramByType = {\r\n    [Type.MESSAGE_DAYS]: days,\r\n    [Type.MESSAGE_WEEKS]: days > 7 ? Math.ceil(days / 7) : 0,\r\n    [Type.MESSAGE_MONTHS]: Math.floor(days / 30),\r\n    [Type.MESSAGE_NEAREST_DAYS]: days - (days % 100),\r\n  };\r\n\r\n  const param = paramByType[type];\r\n\r\n  return days > 0 ? text(param) : Type.MESSAGE_D_DAY;\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport moment from \"moment\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nimport { STATUS_SUCCESS, STATUS_LOADING, STATUS_INIT } from \"constants/Types\";\r\n\r\nimport * as Icon from \"components/Icons/Icons\";\r\n\r\nconst icons = [\r\n  { id: 1, name: \"Terrible\", icon: Icon.Terrible },\r\n  { id: 2, name: \"Bad\", icon: Icon.Bad },\r\n  { id: 3, name: \"Okay\", icon: Icon.Okay },\r\n  { id: 4, name: \"Good\", icon: Icon.Good },\r\n  { id: 5, name: \"Great\", icon: Icon.Great },\r\n];\r\n\r\nconst Feedback = ({ onToggle }) => {\r\n  const [selected, setSelected] = useState(null);\r\n  const [comment, setComment] = useState(\"\");\r\n  const [status, setStatus] = useState(STATUS_INIT);\r\n\r\n  const sendFeedback = async () => {\r\n    const url = new URL(\r\n      `https://script.google.com/macros/s/${process.env.REACT_APP_GOOGLE_SHEET_ID}/exec`\r\n    );\r\n\r\n    const params = {\r\n      date: moment().format(\"YYYY-MM-DD HH:mm:ss\"),\r\n      rating: selected,\r\n      comment,\r\n    };\r\n\r\n    url.search = new URLSearchParams(params);\r\n    setStatus(STATUS_LOADING);\r\n\r\n    const request = await fetch(url.toString(), {\r\n      method: \"POST\",\r\n      mode: \"no-cors\",\r\n      headers: {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        setStatus(STATUS_SUCCESS);\r\n        showMessage(onToggle);\r\n      })\r\n      .catch((error) => console.error(error));\r\n\r\n    initData();\r\n  };\r\n\r\n  const initData = () => {\r\n    setSelected(null);\r\n    setComment(\"\");\r\n  };\r\n\r\n  const showMessage = (callback) => {\r\n    callback();\r\n    \r\n    const message = document.getElementById(\"message\");\r\n    message.classList.toggle(\"fade\");\r\n    message.style.display = \"block\";\r\n\r\n    setTimeout(() => {\r\n      message.style.display = \"none\";\r\n      message.classList.toggle(\"fade\");\r\n    }, 3000);\r\n  };\r\n\r\n  return (\r\n    <div id=\"feedback\">\r\n      <div className=\"header\">\r\n        <span className=\"title\"> SHARE YOUR FEEDBACK</span>\r\n        <CloseIcon onClick={onToggle} />\r\n      </div>\r\n      <div className=\"ratings\">\r\n        {icons.map((i) => (\r\n          <div\r\n            className={`rate ${selected === i.id ? \"selected\" : \"\"}`}\r\n            onClick={() => setSelected(i.id)}\r\n          >\r\n            {i.icon}\r\n            <span className=\"label\"> {i.name}</span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"comment\">\r\n        <textarea\r\n          rows=\"5\"\r\n          placeholder=\"Leave a Comment ...\"\r\n          maxlength=\"250\"\r\n          spellcheck=\"false\"\r\n          autocomplete=\"false\"\r\n          required\r\n          value={comment}\r\n          onChange={(e) => setComment(e.target.value)}\r\n        />\r\n      </div>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={sendFeedback}\r\n        disabled={\r\n          comment.length === 0 || status === STATUS_LOADING || !selected\r\n        }\r\n      >\r\n        {status === STATUS_LOADING ? \"SENDING ...\" : \"SEND\"}\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Feedback;\r\n","const Terrible = (\r\n  <span class=\"icon-terrible\">\r\n    <span class=\"path1\"></span>\r\n    <span class=\"path2\"></span>\r\n    <span class=\"path3\"></span>\r\n    <span class=\"path4\"></span>\r\n    <span class=\"path5\"></span>\r\n    <span class=\"path6\"></span>\r\n    <span class=\"path7\"></span>\r\n    <span class=\"path8\"></span>\r\n    <span class=\"path9\"></span>\r\n    <span class=\"path10\"></span>\r\n  </span>\r\n);\r\nconst Bad = (\r\n  <span class=\"icon-bad\">\r\n    <span class=\"path1\"></span>\r\n    <span class=\"path2\"></span>\r\n    <span class=\"path3\"></span>\r\n    <span class=\"path4\"></span>\r\n    <span class=\"path5\"></span>\r\n    <span class=\"path6\"></span>\r\n    <span class=\"path7\"></span>\r\n    <span class=\"path8\"></span>\r\n    <span class=\"path9\"></span>\r\n  </span>\r\n);\r\nconst Okay = (\r\n  <span class=\"icon-okay\">\r\n    <span class=\"path1\"></span>\r\n    <span class=\"path2\"></span>\r\n    <span class=\"path3\"></span>\r\n    <span class=\"path4\"></span>\r\n    <span class=\"path5\"></span>\r\n    <span class=\"path6\"></span>\r\n    <span class=\"path7\"></span>\r\n    <span class=\"path8\"></span>\r\n    <span class=\"path9\"></span>\r\n    <span class=\"path10\"></span>\r\n    <span class=\"path11\"></span>\r\n    <span class=\"path12\"></span>\r\n    <span class=\"path13\"></span>\r\n    <span class=\"path14\"></span>\r\n  </span>\r\n);\r\nconst Good = (\r\n  <span class=\"icon-good\">\r\n    <span class=\"path1\"></span>\r\n    <span class=\"path2\"></span>\r\n    <span class=\"path3\"></span>\r\n    <span class=\"path4\"></span>\r\n    <span class=\"path5\"></span>\r\n    <span class=\"path6\"></span>\r\n    <span class=\"path7\"></span>\r\n    <span class=\"path8\"></span>\r\n    <span class=\"path9\"></span>\r\n  </span>\r\n);\r\nconst Great = (\r\n  <span class=\"icon-great\">\r\n    <span class=\"path1\"></span>\r\n    <span class=\"path2\"></span>\r\n    <span class=\"path3\"></span>\r\n    <span class=\"path4\"></span>\r\n    <span class=\"path5\"></span>\r\n    <span class=\"path6\"></span>\r\n    <span class=\"path7\"></span>\r\n    <span class=\"path8\"></span>\r\n  </span>\r\n);\r\n\r\nexport { Terrible, Bad, Good, Great, Okay };\r\n","import Component from \"./Feedback\";\r\nexport default Component;\r\n","import Component from \"./Loader\";\r\nexport default Component;\r\n","import React from \"react\";\r\n\r\nconst Loader = () => (\r\n  <div className=\"loader-wrapper\">\r\n    <div className=\"loader\">\r\n      <div></div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Loader;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport axios from \"axios\";\r\nimport Snowflakes from \"magic-snowflakes\";\r\n\r\nimport DateCalculator from \"containers\";\r\n\r\nimport Notification from \"components/Notification\";\r\nimport Feedback from \"components/Feedback\";\r\nimport Loader from \"components/Loader\";\r\n\r\nimport { NotificationProvider } from \"utils/Notification\";\r\n\r\nimport \"styles/app.scss\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\n\r\nfunction App() {\r\n  const [imageLoading, setImageLoading] = useState(true);\r\n  useEffect(() => {\r\n    console.log(\"mount fetching...\");\r\n    fetchImage();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    Snowflakes({\r\n      color: \"white\",\r\n      count: 40,\r\n      speed: 1,\r\n      minSize: 13,\r\n      maxSize: 18,\r\n      minOpacity: 0.5,\r\n    });\r\n  }, []);\r\n\r\n  const fetchImage = async () => {\r\n    const url = `https://images.unsplash.com/photo-1482517967863-00e15c9b44be?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&auto=format&fit=crop&w=1350&q=80`;\r\n    const imgRequest = await axios\r\n      .get(url)\r\n      .then((res) => (res.status === 200 ? res : { error: res }))\r\n      .catch((error) => ({ error }));\r\n\r\n    if (!imgRequest || imgRequest.error) {\r\n      setImageLoading(false);\r\n    } else {\r\n      const img = document.querySelector(\".background\");\r\n      img.src = url;\r\n    }\r\n  };\r\n\r\n  const toggleFeedback = () => {\r\n    const element = document.getElementById(\"feedback\");\r\n    element.classList.toggle(\"show\");\r\n  };\r\n\r\n  const onImageLoad = () => {\r\n    setImageLoading(false);\r\n  };\r\n\r\n  return (\r\n    // <div className=\"App\">\r\n    <div className=\"App christmas-theme\">\r\n      {imageLoading && <Loader />}\r\n      <img className=\"background\" alt=\"\" onLoad={onImageLoad} />\r\n      <DateCalculator />\r\n\r\n      <div className=\"feedback-icon\" onClick={toggleFeedback}>\r\n        <i className=\"icon-feedback\" />\r\n        <Message />\r\n      </div>\r\n      <Feedback onToggle={toggleFeedback} />\r\n\r\n      {/* <Notification />\r\n      <NotificationProvider /> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Message = () => <div id=\"message\">Thanks for your feedback ! 💖</div>;\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}