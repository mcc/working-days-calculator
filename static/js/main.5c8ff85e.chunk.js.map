{"version":3,"sources":["constants/Types.js","components/Card/Card.js","components/Card/index.js","components/Text/index.js","components/Text/Text.js","components/Input/Input.js","components/Input/index.js","components/DateSelector/CalendarModal.js","components/DateSelector/DateSelector.js","components/DateSelector/index.js","components/ProgressBar/ProgressBar.js","components/ProgressBar/index.js","components/SettingsModal/index.js","components/SettingsModal/SettingsModal.js","components/TimeCounter/TimeCounter.js","components/TimeCounter/index.js","utils/Calculate.js","containers/index.js","containers/DateCalculator.js","utils/Storage.js","assets/images/dobby.png","App.js","index.js"],"names":["COLOR_BLUE","TYPE_START","SETTINGS_KEY","DATE_FORMAT","Card","children","className","align","props","cardAlign","classNames","defaultProps","Component","Input","type","value","onChange","placeholder","readOnly","DialogTitle","withStyles","theme","root","margin","padding","spacing","closeButton","position","right","top","color","palette","grey","classes","onClose","other","disableTypography","Typography","variant","IconButton","aria-label","onClick","CalendarModal","open","id","title","Dialog","maxWidth","fullWidth","DialogContent","dividers","locale","minDetail","showNeighboringMonth","Info","Date","name","onOpenCalendar","formattedValue","moment","format","Button","set","hour","minute","second","toDate","startDate","endDate","onDateChange","onCalculate","onOpenSettings","useState","openCalendar","setOpenCalendar","calendarId","setCalendarId","CalculateButton","backgroundColor","toggleCalendar","prevState","BorderLinearProgress","height","borderRadius","colorPrimary","bar","LinearProgress","progress","setProgress","useEffect","timer","setInterval","prevProgress","clearInterval","settings","onSave","date","setDate","setTitle","showCalendar","setShowCalendar","e","target","DialogActions","TimeCard","Colon","timeleft","setTimeleft","end","now","diff","seconds","Math","floor","minutes","hours","days","isNaN","formatHolidays","list","holidays","forEach","holiday","start","subtract","add","dayDiff","i","push","DateCalculator","setStartDate","setEndDate","prevEndDate","ref","useRef","current","usePrevious","workDays","setWorkDays","calendarDays","setCalendarDays","percent","setPercent","openSettings","setOpenSettings","setSettings","showTimer","setTimer","loadFromLocalStorage","isStartDateToday","isEndDateSame","key","localStorage","getItem","JSON","parse","getLocalStorage","split","year","month","h","m","s","toggleOpen","console","log","hd","Holidays","init","startYear","endYear","years","getHolidays","count","daysDiff","find","day","getWorkingDaysCount","baseDate","Number","parseFloat","toFixed","data","ddaySettings","stringify","setItem","setLocalStorage","App","ReactGA","initialize","pageview","window","location","pathname","search","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNAAaA,EAAa,UAGbC,EAAa,QAQbC,EAAe,iBAEfC,EAAa,a,gBCXpBC,EAAO,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,SAAUC,EAAiC,EAAjCA,UAAWC,EAAsB,EAAtBA,MAAUC,EAAY,gDACnDC,EAAS,gBAAYF,GACrBG,EAAU,eAAWJ,GAAa,GAAxB,YAA8BG,GAC9C,OACE,6CAAKH,UAAWI,GAAgBF,GAAhC,aACGH,MAKPD,EAAKO,aAAe,CAClBN,SAAU,wBACVE,MAAO,UAGMH,ICfAQ,EDeAR,EEfAQ,ECAF,SAAC,GAAD,IAAGP,EAAH,EAAGA,SAAaG,EAAhB,mCACX,8CAAMF,UAAU,QAAWE,GAA3B,aAAmCH,MCD/BQ,EAAQ,SAAC,GAA+D,IAA7DC,EAA4D,EAA5DA,KAAMC,EAAsD,EAAtDA,MAAOC,EAA+C,EAA/CA,SAASC,EAAsC,EAAtCA,YAAaC,EAAyB,EAAzBA,SAAyB,oEAC3E,OACE,uBACEJ,KAAMA,EACNC,MAAOA,EACPE,YAAaA,EACbC,SAAUA,EACVF,SAAUA,KAKhBH,EAAMF,aAAe,CACnBG,KAAM,OACNC,MAAO,GACPG,UAAU,GAGGL,ICnBAD,EDmBAC,E,6EEOTM,EAAcC,aAbL,SAACC,GAAD,MAAY,CACzBC,KAAM,CACJC,OAAQ,EACRC,QAASH,EAAMI,QAAQ,IAEzBC,YAAa,CACXC,SAAU,WACVC,MAAOP,EAAMI,QAAQ,GACrBI,IAAKR,EAAMI,QAAQ,GACnBK,MAAOT,EAAMU,QAAQC,KAAK,SAIVZ,EAAmB,SAACZ,GAAW,IACzCH,EAAyCG,EAAzCH,SAAU4B,EAA+BzB,EAA/ByB,QAASC,EAAsB1B,EAAtB0B,QAAYC,EADS,YACC3B,EADD,kCAEhD,OACE,eAAC,IAAD,yBAAgB4B,mBAAiB,EAAC9B,UAAW2B,EAAQX,MAAUa,GAA/D,cACE,cAACE,EAAA,EAAD,CAAYC,QAAQ,KAApB,SAA0BjC,IACzB6B,EACC,cAACK,EAAA,EAAD,CACEC,aAAW,QACXlC,UAAW2B,EAAQP,YACnBe,QAASP,EAHX,SAKE,cAAC,IAAD,MAEA,YAwCKQ,EAnCO,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,KAAMT,EAAmC,EAAnCA,QAASU,EAA0B,EAA1BA,GAAI7B,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC3C6B,EAAQD,IAAO3C,EAAa,aAAe,WAEjD,OACE,eAAC6C,EAAA,EAAD,CACEC,SAAS,KACTC,WAAW,EACXL,KAAMA,EACNT,QAAS,kBAAMA,EAAQ,OACvB5B,UAAU,iBALZ,UAOE,eAAC,EAAD,CAAa4B,QAAS,kBAAMA,EAAQ,OAApC,UAA4CW,EAA5C,OACA,cAACI,EAAA,EAAD,CAAeC,UAAQ,EAAvB,SACE,cAAC,IAAD,CACEnC,MAAOA,EACPoC,OAAO,QACPC,UAAW,QACXC,sBAAsB,EACtBrC,SAAU,SAACD,GACTC,EAAS4B,EAAI7B,Y,SCmCnBuC,EAAO,SAAC,GAAD,IAAGT,EAAH,EAAGA,MAAOJ,EAAV,EAAUA,QAAV,OACX,sBAAKnC,UAAU,OAAf,UACE,eAAC,EAAD,eAAQuC,KACR,mBAAGvC,UAAU,gBAAgBmC,QAASA,QAIpCc,EAAO,SAAC,GAAmD,IAAjDX,EAAgD,EAAhDA,GAAIY,EAA4C,EAA5CA,KAAMzC,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,SAAUyC,EAAqB,EAArBA,eACnCC,EAAiB3C,GAAS4C,IAAO5C,GAAO6C,OAAOzD,GACrD,OACE,sBAAKG,UAAU,eAAf,UACE,eAAC,EAAD,WAAOkD,EAAP,OACA,sBAAKlD,UAAU,OAAf,UACE,cAAC,EAAD,CACEQ,KAAK,OACLC,MAAO2C,EACPzC,YAAad,EACbe,UAAU,IAEZ,mBAAGZ,UAAU,gBAAgBmC,QAAS,kBAAMgB,EAAeb,MAC3D,cAACiB,EAAA,EAAD,CACEvB,QAAQ,WACRR,MAAM,UACNW,QAAS,kBACPzB,EACE4B,EACAe,MAASG,IAAI,CAAEC,KAAM,EAAGC,OAAQ,EAAGC,OAAQ,IAAKC,WANtD,0BCrHOtD,EDWM,SAAC,GAOf,IANLuD,EAMI,EANJA,UACAC,EAKI,EALJA,QACAC,EAII,EAJJA,aACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,eACA1B,EACI,EADJA,MACI,EACoC2B,oBAAS,GAD7C,mBACGC,EADH,KACiBC,EADjB,OAEgCF,mBAAS,MAFzC,mBAEGG,EAFH,KAEeC,EAFf,KAIEC,EAAkBzD,YAAW,CACjCE,KAAM,CACJwD,gBAAiB9E,IAFGoB,CAIrByC,KAyBGkB,EAAiB,SAACnC,GACtB8B,GAAgB,SAACM,GAAD,OAAgBA,KAChCJ,EAAchC,IAGhB,OACE,eAAC,EAAD,CAAMtC,UAAU,gBAAhB,UACE,cAAC,EAAD,CAAMuC,MAAOA,EAAOJ,QAAS8B,IAC7B,cAAC,EAAD,CACE3B,GAAI3C,EACJuD,KAAK,aACLzC,MAAOoD,EACPnD,SAAUqD,EACVZ,eAAgBsB,IAElB,cAAC,EAAD,CACEnC,GRjEgB,MQkEhBY,KAAK,WACLzC,MAAOqD,EACPpD,SAAUqD,EACVZ,eAAgBsB,IAElB,cAACF,EAAD,CACEvC,QAAQ,YACRR,MAAM,UACNW,QAAS6B,EAHX,uBAQCG,GACC,cAAC,EAAD,CACE9B,KAAM8B,EACNvC,QAAS6C,EACTnC,GAAI+B,EACJ5D,MAAO4D,IAAe1E,EAAakE,EAAYC,EAC/CpD,SAAU,SAAC4B,EAAI7B,GACbsD,EAAazB,EAAI7B,GACjBgE,EAAe,a,SEpFrBE,EAAuB7D,aAAW,SAACC,GAAD,MAAY,CAClDC,KAAM,CACJ4D,OAAQ,SACRC,aAAc,GAEhBC,aAAc,CACZN,gBAAiB,SAEnBO,IAAK,CACHF,aAAc,EACdL,gBAAiB9E,MAVQoB,CAYzBkE,KClBW1E,EDoBK,SAAC,GAAe,IAAbG,EAAY,EAAZA,MAAY,EACDyD,mBAAS,GADR,mBAC1Be,EAD0B,KAChBC,EADgB,KAejC,OAZAC,qBAAU,WACR,IAAMC,EAAQC,aAAY,WACxBH,GAAY,SAACI,GAAD,OACVA,GAAgB7E,EAAQA,EAAQ6E,EAAe,OAEhD,KAEH,OAAO,WACLC,cAAcH,MAEf,CAAC3E,IAGF,sBAAKT,UAAU,eAAf,UACE,cAAC2E,EAAD,CAAsB3C,QAAQ,cAAcvB,MAAOwE,IACnD,qCAAQxE,GAAS,EAAjB,W,SEtCSH,ECWO,SAAC,GAAyC,IAAvC+B,EAAsC,EAAtCA,KAAMmD,EAAgC,EAAhCA,SAAU5D,EAAsB,EAAtBA,QAAS6D,EAAa,EAAbA,OAAa,EACrCvB,mBAASb,IAAOmC,EAAS1B,SAASF,UADG,mBACtD8B,EADsD,KAChDC,EADgD,OAEnCzB,mBAASsB,EAASjD,OAFiB,mBAEtDA,EAFsD,KAE/CqD,EAF+C,OAGrB1B,oBAAS,GAHY,mBAGtD2B,EAHsD,KAGxCC,EAHwC,KAiBvD1C,EAAiBsC,GAAQrC,IAAOqC,GAAMpC,OAAO,cACnD,OACE,eAACd,EAAA,EAAD,CACEC,SAAS,KACTC,WAAW,EACXL,KAAMA,EACNrC,UAAU,iBAJZ,UAME,cAACa,EAAA,EAAD,8BACA,eAAC8B,EAAA,EAAD,WACE,sBAAK3C,UAAU,WAAf,UACE,qBAAKA,UAAU,QAAf,0BACA,cAAC,EAAD,CACEQ,KAAK,OACLC,MAAO8B,GAAS,GAChB7B,SAAU,SAACqF,GAAD,OAvBEvF,EAuBkB,QAvBZC,EAuBqBsF,EAAEC,OAAOvF,WAtB3C,UAATD,GAAkBoF,EAASnF,IADZ,IAACD,EAAMC,QA0BtB,sBAAKT,UAAU,WAAf,UACE,qBAAKA,UAAU,QAAf,uBACA,cAAC,EAAD,CACEQ,KAAK,OACLC,MAAO2C,GAAkB,GACzBzC,YAAY,aACZC,UAAU,IAEZ,mBAAGZ,UAAU,gBAAgBmC,QA9Bd,WACrB2D,GAAgB,SAACpB,GAAD,OAAgBA,WA+B3BmB,GACC,cAAC,IAAD,CAGEpF,MAAOiF,EACP7C,OAAO,QACPC,UAAW,QACXC,sBAAsB,EACtBrC,SAhDe,SAACD,GACxBkF,EAAQlF,SAmDN,eAACwF,EAAA,EAAD,WACE,cAAC1C,EAAA,EAAD,CAAQpB,QAASP,EAASJ,MAAM,UAAhC,oBAGA,cAAC+B,EAAA,EAAD,CAAQpB,QAAS,kBAAMsD,EAAO,CAAClD,QAAMmD,UAAQlE,MAAM,UAAnD,yBCzBF0E,EAAW,SAAC,GAAD,IAAG3D,EAAH,EAAGA,MAAO9B,EAAV,EAAUA,MAAV,OACf,sBAAKT,UAAU,YAAf,UACE,sBAAKA,UAAU,OAAf,cAAwBS,KACxB,sBAAKT,UAAU,OAAf,cAAwBuC,EAAxB,WAIE4D,EAAQ,kBACZ,qBAAKnG,UAAU,QAAf,SACE,mBAAGA,UAAU,kBCxDFM,EDKK,SAAC,GAAiB,IAAfwD,EAAc,EAAdA,QAAc,EACHI,mBAAS,IADN,mBAC5BkC,EAD4B,KAClBC,EADkB,KAE/BjB,EAAQ,KAEZD,qBAAU,WAmBR,OAlBAC,EAAQC,aAAY,WAClB,IAAMiB,EAAMjD,IAAOS,GACbyC,EAAMlD,MACNmD,EAAOF,EAAIE,KAAKD,GAEhBE,EAAUC,KAAKC,MAAOH,EAAO,IAAQ,IACrCI,EAAUF,KAAKC,MAAMH,EAAO,IAAO,IAAM,GACzCK,EAAQH,KAAKC,MAAOH,EAAI,KAAuB,IAC/CM,EAAOJ,KAAKC,MAAMH,EAAI,OAE5BH,EAAY,CACVS,KAAMC,MAAMD,GAAQ,IAAMA,EAC1BD,MAAOE,MAAMF,GAAS,IAAMA,EAC5BD,QAASG,MAAMH,GAAW,IAAMA,EAChCH,QAASM,MAAMN,GAAW,IAAMA,MAEjC,KAEI,WACDrB,GAAOG,cAAcH,MAE1B,CAACtB,IA1B+B,MA4B+BsC,EAA1DU,YA5B2B,MA4BpB,IA5BoB,IA4B+BV,EAA9CS,aA5Be,MA4BP,IA5BO,IA4B+BT,EAAjCQ,eA5BE,MA4BQ,IA5BR,IA4B+BR,EAAlBK,eA5Bb,MA4BuB,IA5BvB,EA6BnC,OACE,eAAC,EAAD,CAAMzG,UAAU,wBAAhB,UACE,cAAC,EAAD,CAAUuC,MAAO,OAAQ9B,MAAOqG,IAChC,cAAC,EAAD,IACA,cAAC,EAAD,CAAUvE,MAAO,QAAS9B,MAAOoG,IACjC,cAAC,EAAD,IACA,cAAC,EAAD,CAAUtE,MAAO,UAAW9B,MAAOmG,IACnC,cAAC,EAAD,IACA,cAAC,EAAD,CAAUrE,MAAO,UAAW9B,MAAOgG,Q,yBEFnCO,EAAiB,SAACC,GACtB,IAAIC,EAAW,GAkBf,OAhBAD,EAAKE,SAAQ,SAACC,GAAa,IACnBC,EAAqBD,EAArBC,MAAOf,EAAcc,EAAdd,IAAKpD,EAASkE,EAATlE,KACL,iBAATA,GAA0B,iBAATA,IACnBmE,EAAQhE,IAAOgE,GAAOC,SAAS,EAAG,QAClChB,EAAMjD,IAAOgE,GAAOE,IAAI,EAAG,SAK7B,IAFA,IAAMC,EAAUnE,IAAOiD,GAAKE,KAAKnD,IAAOgE,GAAQ,QAEvCI,EAAI,EAAGA,EAAID,EAASC,IAC3BP,EAASQ,KAAK,CACZhC,KAAMrC,IAAOgE,GAAOE,IAAIE,EAAG,QAAQnE,OAAO,cAC1CJ,KAAMA,OAILgE,GC1DMS,ECkBQ,WAAO,IAAD,EACOzD,mBAAS,MADhB,mBACpBL,EADoB,KACT+D,EADS,OAEG1D,mBAAS,MAFZ,mBAEpBJ,EAFoB,KAEX+D,EAFW,KAGrBC,EA2BN,SAAqBrH,GACnB,IAAMsH,EAAMC,mBAIZ,OAHA7C,qBAAU,WACR4C,EAAIE,QAAUxH,KAETsH,EAAIE,QAhCOC,CAAYpE,GAHL,EAKKI,mBAAS,KALd,mBAKpBiE,EALoB,KAKVC,EALU,OAMalE,mBAAS,KANtB,mBAMpBmE,EANoB,KAMNC,EANM,OAOGpE,mBAAS,GAPZ,mBAOpBqE,EAPoB,KAOXC,EAPW,OASatE,oBAAS,GATtB,mBASpBuE,EAToB,KASNC,EATM,OAUKxE,mBAAS,IAVd,mBAUpBsB,EAVoB,KAUVmD,EAVU,OAYGzE,oBAAS,GAZZ,mBAYpB0E,EAZoB,KAYTC,EAZS,KAc3B1D,qBAAU,WACR2D,MACC,IAEH3D,qBAAU,WACR,IAAM4D,EACJ1F,IAAOQ,GAAWP,OAAOzD,KAAiBwD,MAASC,OAAOzD,GAEtDmJ,EACJ3F,IAAOyE,GAAaxE,OAAOzD,KAC3BwD,IAAOS,GAASR,OAAOzD,GAErBkJ,GAAoBC,GACxBH,GAAS,KACR,CAAChF,EAAWC,IAUf,IAAMgF,EAAuB,WAC3B,IAAMtD,EC3Dc,SAACyD,GACvB,GAAKA,GAAe,KAARA,EAAZ,CAEA,IAAMxI,EAAQyI,aAAaC,QAAQF,GACnC,OAAIxI,EAAc2I,KAAKC,MAAM5I,QAA7B,GDuDmB6I,CAAgB1J,GACjC,GAAK4F,EAAL,CAFiC,MAIbA,EAAZ1B,QAC4ByF,MAAM,KALT,mBAK1BC,EAL0B,KAKpBC,EALoB,KAKb/D,EALa,KAOjCkC,EAAavE,MAASG,IAAI,CAAEkG,EAAG,EAAGC,EAAG,EAAGC,EAAG,IAAKhG,UAChDiE,EAAWxE,IAAO,CAAEmG,OAAMC,MAAOA,EAAQ,EAAG/D,SAAQ9B,UACpD+E,EAAYnD,KAGRqE,EAAa,WACjBnB,GAAgB,SAAChE,GAAD,OAAgBA,MAwClC,OACE,qBAAK1E,UAAU,eAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,cAAC,EAAD,CACE6D,UAAWA,EACXC,QAASA,EACTvB,MAAOiD,EAASjD,MAChBwB,aA5CiB,SAACvD,EAAMC,GAC9BqJ,QAAQC,IAAIvJ,EAAMC,GACdD,IAASb,GAAYiI,EAAanH,GlBxElB,QkByEhBD,GAAmBqH,EAAWpH,IA0C5BuD,YAvCgB,WACtB,GAAKH,GAAcC,KAAWA,EAAUD,GAAxC,CAEA,IAAMiD,EFhFyB,SAACO,EAAOf,GACzC,IAAM0D,EAAK,IAAIC,IACfD,EAAGE,KAAK,MAQR,IANA,IAAMC,EAAY9G,IAAOgE,GAAOmC,OAC1BY,EAAU/G,IAAOiD,GAAKkD,OAExBa,EAAQ,GACRnD,EAAW,GAENO,EAAI,EAAGA,GAAK2C,EAAUD,EAAW1C,IACxC4C,EAAM3C,KAAKyC,EAAY1C,GAGzB4C,EAAMlD,SAAQ,SAACqC,GAAD,aAAU,EAAAtC,GAASQ,KAAT,oBAAiBsC,EAAGM,YAAYd,QAExD,IAAIe,EAAQ,EACZrD,EAAWF,EAAeE,GAI1B,IAFA,IAAMsD,EAAWnH,IAAOiD,GAAKE,KAAKnD,IAAOgE,GAAQ,QAnBA,WAqBxCI,GACP,IAAMQ,EAAU5E,IAAOgE,GAAOE,IAAIE,EAAG,QACnBP,EAASuD,MACzB,SAACf,GAAD,OAAOA,EAAEhE,OAASuC,EAAQ3E,OAAO,kBAGC,IAAlB2E,EAAQyC,OAAiC,IAAlBzC,EAAQyC,OAC/CH,KAPK9C,EAAI,EAAGA,EAAI+C,EAAW,EAAG/C,IAAM,EAA/BA,GAWT,MAAO,CACLU,SAAUoC,EACVlC,aAAcmC,GE8CDG,CAAoB9G,EAAWC,GAC5CwE,EAAgBxB,EAAKuB,cAAgB,KACrCD,EAAYtB,EAAKqB,UAAY,KAE7B,IAAMyC,EAAWvH,IAAOS,GAASwD,SAAS,EAAG,SAEvCiB,GADclF,IAAOQ,GAAW2C,KAAKnD,IAAOuH,GAAW,QAAU,GAC3C,IAAgB,IAE5CpC,EAAWqC,OAAOC,WAAWvC,EAAQwC,QAAQ,KAG3C1H,IAAOQ,GAAWP,OAAOzD,KAAiBwD,MAASC,OAAOzD,IACtCgJ,GAAS,KAyBzB5E,eAAgB4F,IAElB,eAAC,EAAD,CAAM5J,MAAM,OAAZ,UACE,mBAAGD,UAAU,cACZmI,EAFH,mBAIA,eAAC,EAAD,CAAMlI,MAAM,OAAZ,UACE,mBAAGD,UAAU,cACZqI,EAFH,oBAIA,cAAC,EAAD,CAAavE,QAAS8E,EAAY9E,EAAU,OAC5C,cAAC,EAAD,CAAarD,MAAO8H,IAEnBE,GACC,cAAC,EAAD,CACEpG,KAAMoG,EACNjD,SAAUA,EACV5D,QAASiI,EACTpE,OAxCiB,SAACuF,GAAU,IAC5BzI,EAAgByI,EAAhBzI,MAAOmD,EAASsF,EAATtF,KACTuF,EAAe,CACnB1I,QACAuB,QAAST,IAAOqC,GAAMpC,OAAOzD,KC/FX,SAACoJ,EAAKxI,GAC5B,GAAKwI,GAAe,KAARA,EAAZ,CAEA,IAAM+B,EAAO5B,KAAK8B,UAAUzK,GAC5ByI,aAAaiC,QAAQlC,EAAK+B,ID8FxBI,CAAgBxL,EAAcqL,GAC9BpB,IAEAf,a,QE5GW,ICuBAuC,MAhBf,WAME,OALAlG,qBAAU,WACRmG,IAAQC,WAAW,gBACnBD,IAAQE,SAASC,OAAOC,SAASC,SAAWF,OAAOC,SAASE,UAC3D,IAGD,qBAAK5L,UAAU,MAAf,SACE,cAAC,EAAD,OCXN6L,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.5c8ff85e.chunk.js","sourcesContent":["export const COLOR_BLUE = \"#4360FB\";\r\nexport const COLOR_NAVY = \"#1B256D\";\r\n\r\nexport const TYPE_START = \"START\";\r\nexport const TYPE_END = \"END\";\r\n\r\nexport const MESSAGE_COMMON = 'COMMON'; \r\nexport const MESSAGE_DAYS = 'DAYS'; \r\nexport const MESSAGE_WEEKS = 'WEEKS'; \r\nexport const MESSAGE_MONTHS = 'MONTHS'; \r\n\r\nexport const SETTINGS_KEY = 'D_DAY_SETTINGS'; \r\n\r\nexport const DATE_FORMAT ='YYYY/MM/DD'; ","import React from \"react\";\r\n\r\nconst Card = ({ children, className, align, ...props }) => {\r\n  const cardAlign = `align-${align}`;\r\n  const classNames = `card ${className || ''} ${cardAlign}`; \r\n  return (\r\n    <div className={classNames} {...props}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nCard.defaultProps = {\r\n  children: <div></div>,\r\n  align: \"center\",\r\n};\r\n\r\nexport default Card;\r\n","import Component from './Card'; \r\n\r\nexport default Component;","import Component from './Text'; \r\n\r\nexport default Component; ","import React from \"react\";\r\n\r\nconst Text = ({ children, ...props }) => (\r\n  <span className=\"text\" {...props}>{children}</span>\r\n);\r\n\r\nexport default Text;\r\n","import React from \"react\";\r\n\r\nconst Input = ({ type, value, onChange,placeholder, readOnly, ...props }) => {\r\n  return (\r\n    <input\r\n      type={type}\r\n      value={value}\r\n      placeholder={placeholder}\r\n      readOnly={readOnly}\r\n      onChange={onChange}\r\n    />\r\n  );\r\n};\r\n\r\nInput.defaultProps = {\r\n  type: \"text\",\r\n  value: \"\",\r\n  readOnly: false,\r\n};\r\n\r\nexport default Input;\r\n","import Component from './Input'; \r\nexport default Component;","import React from \"react\";\r\n\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport Calendar from \"react-calendar\";\r\n\r\nimport { TYPE_START } from \"constants/Types\";\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          className={classes.closeButton}\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst CalendarModal = ({ open, onClose, id, value, onChange }) => {\r\n  const title = id === TYPE_START ? \"Start Date\" : \"End Date\";\r\n\r\n  return (\r\n    <Dialog\r\n      maxWidth=\"xs\"\r\n      fullWidth={true}\r\n      open={open}\r\n      onClose={() => onClose(null)}\r\n      className=\"calendar-modal\"\r\n    >\r\n      <DialogTitle onClose={() => onClose(null)}>{title} </DialogTitle>\r\n      <DialogContent dividers>\r\n        <Calendar\r\n          value={value}\r\n          locale=\"en-US\"\r\n          minDetail={\"month\"}\r\n          showNeighboringMonth={false}\r\n          onChange={(value) => {\r\n            onChange(id, value);\r\n          }}\r\n        />\r\n      </DialogContent>\r\n      {/* <DialogActions>\r\n        <Button onClick={onClose} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={() => onSave({ title, date })} color=\"primary\">\r\n          Save\r\n        </Button>\r\n      </DialogActions> */}\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default CalendarModal;\r\n","import React, { useState } from \"react\";\r\n\r\nimport moment from \"moment\";\r\n\r\nimport { COLOR_BLUE, TYPE_START, TYPE_END, DATE_FORMAT} from \"constants/Types\";\r\n\r\nimport Card from \"components/Card\";\r\nimport Text from \"components/Text\";\r\nimport Input from \"components/Input\";\r\nimport CalendarModal from \"components/DateSelector/CalendarModal\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst DateSelector = ({\r\n  startDate,\r\n  endDate,\r\n  onDateChange,\r\n  onCalculate,\r\n  onOpenSettings,\r\n  title,\r\n}) => {\r\n  const [openCalendar, setOpenCalendar] = useState(false);\r\n  const [calendarId, setCalendarId] = useState(null);\r\n\r\n  const CalculateButton = withStyles({\r\n    root: {\r\n      backgroundColor: COLOR_BLUE,\r\n    },\r\n  })(Button);\r\n\r\n  // const toggleCalendar = (type) => {\r\n  //   const calendars = document.getElementsByClassName(\"react-calendar\");\r\n  //   const [startCalendar, endCalendar] = calendars;\r\n\r\n  //   if (type === TYPE_START) {\r\n  //     const isHidden = startCalendar.classList.contains(\"hide\");\r\n  //     if (isHidden) {\r\n  //       startCalendar.classList.remove(\"hide\");\r\n  //       endCalendar.classList.add(\"hide\");\r\n  //     } else {\r\n  //       startCalendar.classList.add(\"hide\");\r\n  //     }\r\n  //   }\r\n\r\n  //   if (type === TYPE_END) {\r\n  //     const isHidden = endCalendar.classList.contains(\"hide\");\r\n\r\n  //     isHidden\r\n  //       ? endCalendar.classList.remove(\"hide\")\r\n  //       : endCalendar.classList.add(\"hide\");\r\n  //   }\r\n  // };\r\n\r\n  const toggleCalendar = (id) => {\r\n    setOpenCalendar((prevState) => !prevState);\r\n    setCalendarId(id);\r\n  };\r\n  \r\n  return (\r\n    <Card className=\"date-selector\">\r\n      <Info title={title} onClick={onOpenSettings} />\r\n      <Date\r\n        id={TYPE_START}\r\n        name=\"Start Date\"\r\n        value={startDate}\r\n        onChange={onDateChange}\r\n        onOpenCalendar={toggleCalendar}\r\n      />\r\n      <Date\r\n        id={TYPE_END}\r\n        name=\"End Date\"\r\n        value={endDate}\r\n        onChange={onDateChange}\r\n        onOpenCalendar={toggleCalendar}\r\n      />\r\n      <CalculateButton\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={onCalculate}\r\n      >\r\n        Calculate\r\n      </CalculateButton>\r\n\r\n      {openCalendar && (\r\n        <CalendarModal\r\n          open={openCalendar}\r\n          onClose={toggleCalendar}\r\n          id={calendarId}\r\n          value={calendarId === TYPE_START ? startDate : endDate}\r\n          onChange={(id, value) => {\r\n            onDateChange(id, value);\r\n            toggleCalendar(null);\r\n          }}\r\n        />\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst Info = ({ title, onClick }) => (\r\n  <div className=\"info\">\r\n    <Text> {title}</Text>\r\n    <i className=\"icon-settings\" onClick={onClick} />\r\n  </div>\r\n);\r\n\r\nconst Date = ({ id, name, value, onChange, onOpenCalendar }) => {\r\n  const formattedValue = value && moment(value).format(DATE_FORMAT);\r\n  return (\r\n    <div className=\"date-wrapper\">\r\n      <Text>{name} </Text>\r\n      <div className=\"date\">\r\n        <Input\r\n          type=\"text\"\r\n          value={formattedValue}\r\n          placeholder={DATE_FORMAT}\r\n          readOnly={true}\r\n        />\r\n        <i className=\"icon-calendar\" onClick={() => onOpenCalendar(id)} />\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          onClick={() =>\r\n            onChange(\r\n              id,\r\n              moment().set({ hour: 0, minute: 0, second: 0 }).toDate()\r\n            )\r\n          }\r\n        >\r\n          Today\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default DateSelector;\r\n","import Component from './DateSelector'; \r\n\r\nexport default Component;","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { COLOR_BLUE } from \"constants/Types\";\r\n\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\n\r\nconst BorderLinearProgress = withStyles((theme) => ({\r\n  root: {\r\n    height: \"1.5rem\",\r\n    borderRadius: 5,\r\n  },\r\n  colorPrimary: {\r\n    backgroundColor: \"white\",\r\n  },\r\n  bar: {\r\n    borderRadius: 5,\r\n    backgroundColor: COLOR_BLUE,\r\n  },\r\n}))(LinearProgress);\r\n\r\nconst ProgressBar = ({ value }) => {\r\n  const [progress, setProgress] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setProgress((prevProgress) =>\r\n        prevProgress >= value ? value : prevProgress + 5\r\n      );\r\n    }, 100);\r\n\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, [value]);\r\n\r\n  return (\r\n    <div className=\"progress-bar\">\r\n      <BorderLinearProgress variant=\"determinate\" value={progress} />\r\n      <span> {value || 0}%</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgressBar;\r\n","import Component from './ProgressBar'; \r\nexport default Component; ","import Component from './SettingsModal'; \r\nexport default Component; ","import React, { useState } from \"react\";\r\n\r\nimport moment from \"moment\";\r\nimport Calendar from \"react-calendar\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\n\r\nimport Input from \"components/Input\";\r\nconst SettingsModal = ({ open, settings, onClose, onSave }) => {\r\n  const [date, setDate] = useState(moment(settings.endDate).toDate());\r\n  const [title, setTitle] = useState(settings.title);\r\n  const [showCalendar, setShowCalendar] = useState(false);\r\n\r\n  const handleChangeDate = (value) => {\r\n    setDate(value);\r\n  };\r\n\r\n  const handleChange = (type, value) => {\r\n    if (type === \"title\") setTitle(value);\r\n  };\r\n\r\n  const toggleCalendar = () => {\r\n    setShowCalendar((prevState) => !prevState);\r\n  };\r\n\r\n  const formattedValue = date && moment(date).format(\"YYYY/MM/DD\");\r\n  return (\r\n    <Dialog\r\n      maxWidth=\"xs\"\r\n      fullWidth={true}\r\n      open={open}\r\n      className=\"settings-modal\"\r\n    >\r\n      <DialogTitle> D-Day Settings</DialogTitle>\r\n      <DialogContent>\r\n        <div className=\"settings\">\r\n          <div className=\"title\"> D-Day Title</div>\r\n          <Input\r\n            type=\"text\"\r\n            value={title || \"\"}\r\n            onChange={(e) => handleChange(\"title\", e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"settings\">\r\n          <div className=\"title\"> End Date</div>\r\n          <Input\r\n            type=\"text\"\r\n            value={formattedValue || \"\"}\r\n            placeholder=\"YYYY/MM/DD\"\r\n            readOnly={true}\r\n          />\r\n          <i className=\"icon-calendar\" onClick={toggleCalendar} />\r\n        </div>\r\n        {showCalendar && (\r\n          <Calendar\r\n            // id=\"settings-calendar\"\r\n            // className=\"hide\"\r\n            value={date}\r\n            locale=\"en-US\"\r\n            minDetail={\"month\"}\r\n            showNeighboringMonth={false}\r\n            onChange={handleChangeDate}\r\n          />\r\n        )}\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onClose} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={() => onSave({title,date})} color=\"primary\">\r\n          Save\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default SettingsModal;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport moment from \"moment\";\r\n\r\nimport Card from \"components/Card\";\r\n\r\nconst TimeCounter = ({ endDate }) => {\r\n  const [timeleft, setTimeleft] = useState({});\r\n  let timer = null;\r\n\r\n  useEffect(() => {\r\n    timer = setInterval(() => {\r\n      const end = moment(endDate);\r\n      const now = moment();\r\n      const diff = end.diff(now);\r\n\r\n      const seconds = Math.floor((diff / 1000) % 60);\r\n      const minutes = Math.floor(diff / 1000 / 60) % 60;\r\n      const hours = Math.floor((diff / (1000 * 60 * 60)) % 24);\r\n      const days = Math.floor(diff / (1000 * 60 * 60 * 24));\r\n\r\n      setTimeleft({\r\n        days: isNaN(days) ? \"-\" : days,\r\n        hours: isNaN(hours) ? \"-\" : hours,\r\n        minutes: isNaN(minutes) ? \"-\" : minutes,\r\n        seconds: isNaN(seconds) ? \"-\" : seconds,\r\n      });\r\n    }, 1000);\r\n\r\n    return () => {\r\n      if (timer) clearInterval(timer);\r\n    };\r\n  }, [endDate]);\r\n\r\n  const { days = '-', hours = '-', minutes = '-', seconds = '-' } = timeleft;\r\n  return (\r\n    <Card className=\"gradient time-counter\">\r\n      <TimeCard title={\"DAYS\"} value={days} />\r\n      <Colon />\r\n      <TimeCard title={\"HOURS\"} value={hours} />\r\n      <Colon />\r\n      <TimeCard title={\"MINUTES\"} value={minutes} />\r\n      <Colon />\r\n      <TimeCard title={\"SECONDS\"} value={seconds} />\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst TimeCard = ({ title, value }) => (\r\n  <div className=\"time-card\">\r\n    <div className=\"time\"> {value}</div>\r\n    <div className=\"type\"> {title} </div>\r\n  </div>\r\n);\r\n\r\nconst Colon = () => (\r\n  <div className=\"colon\">\r\n    <i className=\"icon-colon\" />\r\n  </div>\r\n);\r\n\r\nexport default TimeCounter;\r\n","import Component from './TimeCounter'; \r\nexport default Component;","import moment from \"moment\";\r\nimport Holidays from \"date-holidays\";\r\n\r\nexport const getWorkingDaysCount = (start, end) => {\r\n  const hd = new Holidays();\r\n  hd.init(\"KR\");\r\n\r\n  const startYear = moment(start).year();\r\n  const endYear = moment(end).year();\r\n\r\n  let years = [];\r\n  let holidays = [];\r\n\r\n  for (let i = 0; i <= endYear - startYear; i++) {\r\n    years.push(startYear + i);\r\n  }\r\n\r\n  years.forEach((year) => holidays.push(...hd.getHolidays(year)));\r\n\r\n  let count = 0;\r\n  holidays = formatHolidays(holidays);\r\n\r\n  const daysDiff = moment(end).diff(moment(start), \"days\");\r\n\r\n  for (let i = 0; i < daysDiff + 1; i++) {\r\n    const current = moment(start).add(i, \"days\");\r\n    const isHoliday = holidays.find(\r\n      (h) => h.date === current.format(\"YYYY-MM-DD\")\r\n    );\r\n\r\n    if (!isHoliday && current.day() !== 6 && current.day() !== 0) {\r\n      count++;\r\n    }\r\n  }\r\n\r\n  return {\r\n    workDays: count,\r\n    calendarDays: daysDiff,\r\n  };\r\n};\r\n\r\nconst formatHolidays = (list) => {\r\n  let holidays = [];\r\n\r\n  list.forEach((holiday) => {\r\n    let { start, end, name } = holiday;\r\n    if (name === \"설날\" || name === \"추석\") {\r\n      start = moment(start).subtract(1, \"days\");\r\n      end = moment(start).add(3, \"days\");\r\n    }\r\n\r\n    const dayDiff = moment(end).diff(moment(start), \"days\");\r\n\r\n    for (let i = 0; i < dayDiff; i++) {\r\n      holidays.push({\r\n        date: moment(start).add(i, \"days\").format(\"YYYY-MM-DD\"),\r\n        name: name,\r\n      });\r\n    }\r\n  });\r\n  return holidays;\r\n};\r\n","import DateCalculator from './DateCalculator'; \r\n\r\nexport default DateCalculator; \r\n","import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nimport moment from \"moment\";\r\n\r\nimport {\r\n  TYPE_START,\r\n  TYPE_END,\r\n  SETTINGS_KEY,\r\n  DATE_FORMAT,\r\n} from \"constants/Types\";\r\n\r\nimport DateSelector from \"components/DateSelector\";\r\nimport Card from \"components/Card\";\r\nimport ProgressBar from \"components/ProgressBar\";\r\nimport SettingsModal from \"components/SettingsModal\";\r\nimport TimeCounter from \"components/TimeCounter\";\r\n\r\nimport { getWorkingDaysCount } from \"utils/Calculate\";\r\nimport { getLocalStorage, setLocalStorage } from \"utils/Storage\";\r\n\r\nconst DateCalculator = () => {\r\n  const [startDate, setStartDate] = useState(null);\r\n  const [endDate, setEndDate] = useState(null);\r\n  const prevEndDate = usePrevious(endDate);\r\n\r\n  const [workDays, setWorkDays] = useState(\"-\");\r\n  const [calendarDays, setCalendarDays] = useState(\"-\");\r\n  const [percent, setPercent] = useState(0);\r\n\r\n  const [openSettings, setOpenSettings] = useState(false);\r\n  const [settings, setSettings] = useState({});\r\n\r\n  const [showTimer, setTimer] = useState(false);\r\n\r\n  useEffect(() => {\r\n    loadFromLocalStorage();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const isStartDateToday =\r\n      moment(startDate).format(DATE_FORMAT) === moment().format(DATE_FORMAT);\r\n\r\n    const isEndDateSame =\r\n      moment(prevEndDate).format(DATE_FORMAT) ===\r\n      moment(endDate).format(DATE_FORMAT);\r\n\r\n    if (isStartDateToday && isEndDateSame) return;\r\n    setTimer(false);\r\n  }, [startDate, endDate]);\r\n\r\n  function usePrevious(value) {\r\n    const ref = useRef();\r\n    useEffect(() => {\r\n      ref.current = value;\r\n    });\r\n    return ref.current;\r\n  }\r\n\r\n  const loadFromLocalStorage = () => {\r\n    const settings = getLocalStorage(SETTINGS_KEY);\r\n    if (!settings) return;\r\n\r\n    const { endDate } = settings;\r\n    const [year, month, date] = endDate.split(\"/\");\r\n\r\n    setStartDate(moment().set({ h: 0, m: 0, s: 0 }).toDate());\r\n    setEndDate(moment({ year, month: month - 1, date }).toDate());\r\n    setSettings(settings);\r\n  };\r\n\r\n  const toggleOpen = () => {\r\n    setOpenSettings((prevState) => !prevState);\r\n  };\r\n\r\n  const handleDateChange = (type, value) => {\r\n    console.log(type, value);\r\n    if (type === TYPE_START) setStartDate(value);\r\n    if (type === TYPE_END) setEndDate(value);\r\n  };\r\n\r\n  const handleCalculate = () => {\r\n    if (!startDate || !endDate || endDate < startDate) return;\r\n\r\n    const days = getWorkingDaysCount(startDate, endDate);\r\n    setCalendarDays(days.calendarDays || \"-\");\r\n    setWorkDays(days.workDays || \"-\");\r\n\r\n    const baseDate = moment(endDate).subtract(2, \"years\");\r\n    const passedDates = moment(startDate).diff(moment(baseDate), \"days\") + 1;\r\n    const percent = (passedDates / (365 * 2)) * 100;\r\n\r\n    setPercent(Number.parseFloat(percent.toFixed(1)));\r\n\r\n    const isStartDateToday =\r\n      moment(startDate).format(DATE_FORMAT) === moment().format(DATE_FORMAT);\r\n    if (isStartDateToday) setTimer(true);\r\n  };\r\n\r\n  const handleSaveSettings = (data) => {\r\n    const { title, date } = data;\r\n    const ddaySettings = {\r\n      title,\r\n      endDate: moment(date).format(DATE_FORMAT),\r\n    };\r\n\r\n    setLocalStorage(SETTINGS_KEY, ddaySettings);\r\n    toggleOpen();\r\n\r\n    loadFromLocalStorage();\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-content\">\r\n      <div className=\"content-wrapper\">\r\n        <DateSelector\r\n          startDate={startDate}\r\n          endDate={endDate}\r\n          title={settings.title}\r\n          onDateChange={handleDateChange}\r\n          onCalculate={handleCalculate}\r\n          onOpenSettings={toggleOpen}\r\n        />\r\n        <Card align=\"left\">\r\n          <i className=\"icon-work\" />\r\n          {workDays} working days\r\n        </Card>\r\n        <Card align=\"left\">\r\n          <i className=\"icon-date\" />\r\n          {calendarDays} calendar days\r\n        </Card>\r\n        <TimeCounter endDate={showTimer ? endDate : null} />\r\n        <ProgressBar value={percent} />\r\n\r\n        {openSettings && (\r\n          <SettingsModal\r\n            open={openSettings}\r\n            settings={settings}\r\n            onClose={toggleOpen}\r\n            onSave={handleSaveSettings}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DateCalculator;\r\n","const getLocalStorage = (key) => {\r\n  if (!key || key === \"\") return;\r\n\r\n  const value = localStorage.getItem(key);\r\n  if (value) return JSON.parse(value);\r\n};\r\n\r\nconst setLocalStorage = (key, value) => {\r\n  if (!key || key === \"\") return;\r\n\r\n  const data = JSON.stringify(value);\r\n  localStorage.setItem(key, data);\r\n};\r\n\r\nexport { getLocalStorage, setLocalStorage };\r\n","export default __webpack_public_path__ + \"static/media/dobby.b1cb7c5e.png\";","import React, { useEffect } from \"react\";\r\nimport \"styles/app.scss\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\nimport DateCalculator from \"containers\";\r\nimport ReactGA from \"react-ga\";\r\nimport DobbyIcon from \"assets/images/dobby.png\";\r\n\r\nfunction App() {\r\n  useEffect(() => {\r\n    ReactGA.initialize(\"G-HXVX2W66FB\");\r\n    ReactGA.pageview(window.location.pathname + window.location.search);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <DateCalculator />\r\n      {/* <div className=\"dobby-wrapper\">\r\n        <img src={DobbyIcon} alt=\"dobby\"/>\r\n      </div> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}